Component: Arm Compiler for Embedded 6.19 Tool: armlink [5e73cb00]

==============================================================================

Section Cross References

    main.o(.text.initTimer0) refers to sysctl.o(i.SysCtlPeripheralEnable) for SysCtlPeripheralEnable
    main.o(.text.initTimer0) refers to sysctl.o(i.SysCtlPeripheralReady) for SysCtlPeripheralReady
    main.o(.text.initTimer0) refers to timer.o(i.TimerIntEnable) for TimerIntEnable
    main.o(.text.initTimer0) refers to timer.o(i.TimerConfigure) for TimerConfigure
    main.o(.text.initTimer0) refers to timer.o(i.TimerLoadSet) for TimerLoadSet
    main.o(.text.initTimer0) refers to interrupt.o(i.IntEnable) for IntEnable
    main.o(.text.initTimer0) refers to main.o(.text.Timer0AIntHandler) for Timer0AIntHandler
    main.o(.text.initTimer0) refers to timer.o(i.TimerIntRegister) for TimerIntRegister
    main.o(.ARM.exidx.text.initTimer0) refers to main.o(.text.initTimer0) for [Anonymous Symbol]
    main.o(.text.main) refers to queue.o(.text.xQueueCreateMutex) for xQueueCreateMutex
    main.o(.text.main) refers to main.o(.bss.motorMutex) for motorMutex
    main.o(.text.main) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    main.o(.text.main) refers to main.o(.bss.xUnlockSemaphore) for xUnlockSemaphore
    main.o(.text.main) refers to main.o(.bss.xLockSemaphore) for xLockSemaphore
    main.o(.text.main) refers to main.o(.bss.xOpenWindowSemaphore) for xOpenWindowSemaphore
    main.o(.text.main) refers to main.o(.bss.xCloseWindowSemaphore) for xCloseWindowSemaphore
    main.o(.text.main) refers to main.o(.bss.xAutoOpenWindowSemaphore) for xAutoOpenWindowSemaphore
    main.o(.text.main) refers to main.o(.bss.xAutoCloseWindowSemaphore) for xAutoCloseWindowSemaphore
    main.o(.text.main) refers to main.o(.bss.xOpenWindowDriverSemaphore) for xOpenWindowDriverSemaphore
    main.o(.text.main) refers to main.o(.bss.xCloseWindowDriverSemaphore) for xCloseWindowDriverSemaphore
    main.o(.text.main) refers to main.o(.bss.xAutoOpenWindowDriverSemaphore) for xAutoOpenWindowDriverSemaphore
    main.o(.text.main) refers to main.o(.bss.xAutoCloseWindowDriverSemaphore) for xAutoCloseWindowDriverSemaphore
    main.o(.text.main) refers to main.o(.bss.xJamProtectionSemaphore) for xJamProtectionSemaphore
    main.o(.text.main) refers to main.o(.bss.xLimitSwitchUpSemaphore) for xLimitSwitchUpSemaphore
    main.o(.text.main) refers to main.o(.bss.xLimitSwitchDownSemaphore) for xLimitSwitchDownSemaphore
    main.o(.text.main) refers to main.o(.bss.xStateQueuePassenger) for xStateQueuePassenger
    main.o(.text.main) refers to main.o(.bss.xStateQueueDriver) for xStateQueueDriver
    main.o(.text.main) refers to main.o(.bss.xStateQueueAutoOPenPassenger) for xStateQueueAutoOPenPassenger
    main.o(.text.main) refers to main.o(.bss.xStateQueueAutoClosePassenger) for xStateQueueAutoClosePassenger
    main.o(.text.main) refers to main.o(.bss.xStateQueueAutoOpenDriver) for xStateQueueAutoOpenDriver
    main.o(.text.main) refers to main.o(.bss.xStateQueueAutoCloseDriver) for xStateQueueAutoCloseDriver
    main.o(.text.main) refers to main.o(.bss.xlockingQueue) for xlockingQueue
    main.o(.text.main) refers to main.o(.bss.xLimitSwitchQueue) for xLimitSwitchQueue
    main.o(.text.main) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    main.o(.text.main) refers to sysctl.o(i.SysCtlPeripheralEnable) for SysCtlPeripheralEnable
    main.o(.text.main) refers to sysctl.o(i.SysCtlPeripheralReady) for SysCtlPeripheralReady
    main.o(.text.main) refers to main.o(.text.initTimer0) for initTimer0
    main.o(.text.main) refers to motordriver.o(.text.motorInit) for motorInit
    main.o(.text.main) refers to gpio.o(i.GPIOPinTypeGPIOInput) for GPIOPinTypeGPIOInput
    main.o(.text.main) refers to gpio.o(i.GPIOUnlockPin) for GPIOUnlockPin
    main.o(.text.main) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    main.o(.text.main) refers to interrupt.o(i.IntMasterEnable) for IntMasterEnable
    main.o(.text.main) refers to gpio.o(i.GPIOIntEnable) for GPIOIntEnable
    main.o(.text.main) refers to gpio.o(i.GPIOIntTypeSet) for GPIOIntTypeSet
    main.o(.text.main) refers to main.o(.text.GPIOF_Handler) for GPIOF_Handler
    main.o(.text.main) refers to gpio.o(i.GPIOIntRegister) for GPIOIntRegister
    main.o(.text.main) refers to main.o(.text.GPIOA_Handler) for GPIOA_Handler
    main.o(.text.main) refers to main.o(.text.GPIOE_Handler) for GPIOE_Handler
    main.o(.text.main) refers to main.o(.text.GPIOC_Handler) for GPIOC_Handler
    main.o(.text.main) refers to interrupt.o(i.IntPrioritySet) for IntPrioritySet
    main.o(.text.main) refers to main.o(.text.LimitSwitchUp) for LimitSwitchUp
    main.o(.text.main) refers to main.o(.rodata.str1.1) for .L.str
    main.o(.text.main) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    main.o(.text.main) refers to main.o(.text.LimitSwitchDown) for LimitSwitchDown
    main.o(.text.main) refers to main.o(.text.JamProtection) for JamProtection
    main.o(.text.main) refers to main.o(.text.Lock) for Lock
    main.o(.text.main) refers to main.o(.text.Unlock) for Unlock
    main.o(.text.main) refers to main.o(.text.OpenWindow) for OpenWindow
    main.o(.text.main) refers to main.o(.text.CloseWindow) for CloseWindow
    main.o(.text.main) refers to main.o(.text.AutoOpenWindow) for AutoOpenWindow
    main.o(.text.main) refers to main.o(.text.AutoCloseWindow) for AutoCloseWindow
    main.o(.text.main) refers to main.o(.text.CloseWindowDriver) for CloseWindowDriver
    main.o(.text.main) refers to main.o(.text.OpenWindowDriver) for OpenWindowDriver
    main.o(.text.main) refers to main.o(.text.AutoCloseWindowDriver) for AutoCloseWindowDriver
    main.o(.text.main) refers to main.o(.text.AutoOpenWindowDriver) for AutoOpenWindowDriver
    main.o(.text.main) refers to tasks.o(.text.vTaskStartScheduler) for vTaskStartScheduler
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    main.o(.text.GPIOF_Handler) refers to dio.o(.text.delay) for delay
    main.o(.text.GPIOF_Handler) refers to gpio.o(i.GPIOIntStatus) for GPIOIntStatus
    main.o(.text.GPIOF_Handler) refers to gpio.o(i.GPIOPinRead) for GPIOPinRead
    main.o(.text.GPIOF_Handler) refers to main.o(.bss.xlockingQueue) for xlockingQueue
    main.o(.text.GPIOF_Handler) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for uxQueueMessagesWaitingFromISR
    main.o(.text.GPIOF_Handler) refers to queue.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    main.o(.text.GPIOF_Handler) refers to main.o(.bss.xLockSemaphore) for xLockSemaphore
    main.o(.text.GPIOF_Handler) refers to queue.o(.text.xQueueGiveFromISR) for xQueueGiveFromISR
    main.o(.text.GPIOF_Handler) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    main.o(.text.GPIOF_Handler) refers to main.o(.bss.xUnlockSemaphore) for xUnlockSemaphore
    main.o(.text.GPIOF_Handler) refers to main.o(.bss.xStateQueueAutoOPenPassenger) for xStateQueueAutoOPenPassenger
    main.o(.text.GPIOF_Handler) refers to main.o(.bss.xStateQueueAutoClosePassenger) for xStateQueueAutoClosePassenger
    main.o(.text.GPIOF_Handler) refers to main.o(.bss.xAutoOpenWindowSemaphore) for xAutoOpenWindowSemaphore
    main.o(.text.GPIOF_Handler) refers to main.o(.bss.xJamProtectionSemaphore) for xJamProtectionSemaphore
    main.o(.text.GPIOF_Handler) refers to main.o(.bss.xAutoCloseWindowSemaphore) for xAutoCloseWindowSemaphore
    main.o(.text.GPIOF_Handler) refers to gpio.o(i.GPIOIntClear) for GPIOIntClear
    main.o(.ARM.exidx.text.GPIOF_Handler) refers to main.o(.text.GPIOF_Handler) for [Anonymous Symbol]
    main.o(.text.GPIOA_Handler) refers to dio.o(.text.delay) for delay
    main.o(.text.GPIOA_Handler) refers to gpio.o(i.GPIOIntStatus) for GPIOIntStatus
    main.o(.text.GPIOA_Handler) refers to gpio.o(i.GPIOPinRead) for GPIOPinRead
    main.o(.text.GPIOA_Handler) refers to main.o(.bss.xStateQueuePassenger) for xStateQueuePassenger
    main.o(.text.GPIOA_Handler) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for uxQueueMessagesWaitingFromISR
    main.o(.text.GPIOA_Handler) refers to queue.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    main.o(.text.GPIOA_Handler) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    main.o(.text.GPIOA_Handler) refers to main.o(.bss.xCloseWindowSemaphore) for xCloseWindowSemaphore
    main.o(.text.GPIOA_Handler) refers to queue.o(.text.xQueueGiveFromISR) for xQueueGiveFromISR
    main.o(.text.GPIOA_Handler) refers to main.o(.bss.xStateQueueAutoOpenDriver) for xStateQueueAutoOpenDriver
    main.o(.text.GPIOA_Handler) refers to main.o(.bss.xStateQueueAutoOPenPassenger) for xStateQueueAutoOPenPassenger
    main.o(.text.GPIOA_Handler) refers to main.o(.bss.xlockingQueue) for xlockingQueue
    main.o(.text.GPIOA_Handler) refers to tasks.o(.text.xTaskGetTickCountFromISR) for xTaskGetTickCountFromISR
    main.o(.text.GPIOA_Handler) refers to main.o(.bss.startTimePassenger) for startTimePassenger
    main.o(.text.GPIOA_Handler) refers to main.o(.bss.xOpenWindowSemaphore) for xOpenWindowSemaphore
    main.o(.text.GPIOA_Handler) refers to main.o(.bss.xStateQueueAutoCloseDriver) for xStateQueueAutoCloseDriver
    main.o(.text.GPIOA_Handler) refers to main.o(.bss.xStateQueueAutoClosePassenger) for xStateQueueAutoClosePassenger
    main.o(.text.GPIOA_Handler) refers to main.o(.bss.xAutoOpenWindowDriverSemaphore) for xAutoOpenWindowDriverSemaphore
    main.o(.text.GPIOA_Handler) refers to gpio.o(i.GPIOIntClear) for GPIOIntClear
    main.o(.ARM.exidx.text.GPIOA_Handler) refers to main.o(.text.GPIOA_Handler) for [Anonymous Symbol]
    main.o(.text.GPIOE_Handler) refers to dio.o(.text.delay) for delay
    main.o(.text.GPIOE_Handler) refers to gpio.o(i.GPIOIntStatus) for GPIOIntStatus
    main.o(.text.GPIOE_Handler) refers to gpio.o(i.GPIOPinRead) for GPIOPinRead
    main.o(.text.GPIOE_Handler) refers to main.o(.bss.xLimitSwitchQueue) for xLimitSwitchQueue
    main.o(.text.GPIOE_Handler) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for uxQueueMessagesWaitingFromISR
    main.o(.text.GPIOE_Handler) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    main.o(.text.GPIOE_Handler) refers to queue.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    main.o(.text.GPIOE_Handler) refers to main.o(.bss.xStateQueueDriver) for xStateQueueDriver
    main.o(.text.GPIOE_Handler) refers to main.o(.bss.xCloseWindowDriverSemaphore) for xCloseWindowDriverSemaphore
    main.o(.text.GPIOE_Handler) refers to queue.o(.text.xQueueGiveFromISR) for xQueueGiveFromISR
    main.o(.text.GPIOE_Handler) refers to main.o(.bss.xStateQueuePassenger) for xStateQueuePassenger
    main.o(.text.GPIOE_Handler) refers to main.o(.bss.xCloseWindowSemaphore) for xCloseWindowSemaphore
    main.o(.text.GPIOE_Handler) refers to main.o(.bss.xOpenWindowDriverSemaphore) for xOpenWindowDriverSemaphore
    main.o(.text.GPIOE_Handler) refers to main.o(.bss.xOpenWindowSemaphore) for xOpenWindowSemaphore
    main.o(.text.GPIOE_Handler) refers to gpio.o(i.GPIOIntClear) for GPIOIntClear
    main.o(.ARM.exidx.text.GPIOE_Handler) refers to main.o(.text.GPIOE_Handler) for [Anonymous Symbol]
    main.o(.text.GPIOC_Handler) refers to dio.o(.text.delay) for delay
    main.o(.text.GPIOC_Handler) refers to gpio.o(i.GPIOIntStatus) for GPIOIntStatus
    main.o(.text.GPIOC_Handler) refers to gpio.o(i.GPIOPinRead) for GPIOPinRead
    main.o(.text.GPIOC_Handler) refers to main.o(.bss.xStateQueueDriver) for xStateQueueDriver
    main.o(.text.GPIOC_Handler) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for uxQueueMessagesWaitingFromISR
    main.o(.text.GPIOC_Handler) refers to queue.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    main.o(.text.GPIOC_Handler) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    main.o(.text.GPIOC_Handler) refers to tasks.o(.text.xTaskGetTickCountFromISR) for xTaskGetTickCountFromISR
    main.o(.text.GPIOC_Handler) refers to main.o(.bss.startTimeDriver) for startTimeDriver
    main.o(.text.GPIOC_Handler) refers to main.o(.bss.xOpenWindowDriverSemaphore) for xOpenWindowDriverSemaphore
    main.o(.text.GPIOC_Handler) refers to queue.o(.text.xQueueGiveFromISR) for xQueueGiveFromISR
    main.o(.text.GPIOC_Handler) refers to main.o(.bss.xStateQueueAutoCloseDriver) for xStateQueueAutoCloseDriver
    main.o(.text.GPIOC_Handler) refers to main.o(.bss.xStateQueueAutoClosePassenger) for xStateQueueAutoClosePassenger
    main.o(.text.GPIOC_Handler) refers to main.o(.bss.xCloseWindowDriverSemaphore) for xCloseWindowDriverSemaphore
    main.o(.text.GPIOC_Handler) refers to main.o(.bss.xStateQueueAutoOpenDriver) for xStateQueueAutoOpenDriver
    main.o(.text.GPIOC_Handler) refers to main.o(.bss.xStateQueueAutoOPenPassenger) for xStateQueueAutoOPenPassenger
    main.o(.text.GPIOC_Handler) refers to main.o(.bss.xAutoCloseWindowDriverSemaphore) for xAutoCloseWindowDriverSemaphore
    main.o(.text.GPIOC_Handler) refers to gpio.o(i.GPIOIntClear) for GPIOIntClear
    main.o(.ARM.exidx.text.GPIOC_Handler) refers to main.o(.text.GPIOC_Handler) for [Anonymous Symbol]
    main.o(.text.LimitSwitchUp) refers to main.o(.bss.xLimitSwitchUpSemaphore) for xLimitSwitchUpSemaphore
    main.o(.text.LimitSwitchUp) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    main.o(.text.LimitSwitchUp) refers to motordriver.o(.text.motorStop) for motorStop
    main.o(.ARM.exidx.text.LimitSwitchUp) refers to main.o(.text.LimitSwitchUp) for [Anonymous Symbol]
    main.o(.text.LimitSwitchDown) refers to main.o(.bss.xLimitSwitchDownSemaphore) for xLimitSwitchDownSemaphore
    main.o(.text.LimitSwitchDown) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    main.o(.text.LimitSwitchDown) refers to motordriver.o(.text.motorStop) for motorStop
    main.o(.ARM.exidx.text.LimitSwitchDown) refers to main.o(.text.LimitSwitchDown) for [Anonymous Symbol]
    main.o(.text.JamProtection) refers to main.o(.bss.xJamProtectionSemaphore) for xJamProtectionSemaphore
    main.o(.text.JamProtection) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    main.o(.text.JamProtection) refers to timer.o(i.TimerEnable) for TimerEnable
    main.o(.text.JamProtection) refers to motordriver.o(.text.motorMoveDown) for motorMoveDown
    main.o(.text.JamProtection) refers to main.o(.bss.counter) for counter
    main.o(.text.JamProtection) refers to main.o(.bss.xLimitSwitchQueue) for xLimitSwitchQueue
    main.o(.text.JamProtection) refers to queue.o(.text.xQueuePeek) for xQueuePeek
    main.o(.text.JamProtection) refers to timer.o(i.TimerDisable) for TimerDisable
    main.o(.text.JamProtection) refers to motordriver.o(.text.motorStop) for motorStop
    main.o(.ARM.exidx.text.JamProtection) refers to main.o(.text.JamProtection) for [Anonymous Symbol]
    main.o(.text.Lock) refers to main.o(.bss.xLockSemaphore) for xLockSemaphore
    main.o(.text.Lock) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    main.o(.text.Lock) refers to main.o(.bss.xStateQueueDriver) for xStateQueueDriver
    main.o(.text.Lock) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    main.o(.text.Lock) refers to motordriver.o(.text.motorStop) for motorStop
    main.o(.ARM.exidx.text.Lock) refers to main.o(.text.Lock) for [Anonymous Symbol]
    main.o(.text.Unlock) refers to main.o(.bss.xUnlockSemaphore) for xUnlockSemaphore
    main.o(.text.Unlock) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    main.o(.text.Unlock) refers to main.o(.bss.xStateQueuePassenger) for xStateQueuePassenger
    main.o(.text.Unlock) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    main.o(.text.Unlock) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    main.o(.text.Unlock) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    main.o(.text.Unlock) refers to main.o(.bss.xOpenWindowSemaphore) for xOpenWindowSemaphore
    main.o(.text.Unlock) refers to main.o(.bss.xCloseWindowSemaphore) for xCloseWindowSemaphore
    main.o(.ARM.exidx.text.Unlock) refers to main.o(.text.Unlock) for [Anonymous Symbol]
    main.o(.text.OpenWindow) refers to main.o(.bss.xOpenWindowSemaphore) for xOpenWindowSemaphore
    main.o(.text.OpenWindow) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    main.o(.text.OpenWindow) refers to motordriver.o(.text.motorMoveDown) for motorMoveDown
    main.o(.text.OpenWindow) refers to main.o(.bss.xStateQueuePassenger) for xStateQueuePassenger
    main.o(.text.OpenWindow) refers to queue.o(.text.xQueuePeek) for xQueuePeek
    main.o(.text.OpenWindow) refers to main.o(.bss.xLimitSwitchQueue) for xLimitSwitchQueue
    main.o(.text.OpenWindow) refers to main.o(.bss.xlockingQueue) for xlockingQueue
    main.o(.text.OpenWindow) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    main.o(.text.OpenWindow) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    main.o(.ARM.exidx.text.OpenWindow) refers to main.o(.text.OpenWindow) for [Anonymous Symbol]
    main.o(.text.CloseWindow) refers to main.o(.bss.xCloseWindowSemaphore) for xCloseWindowSemaphore
    main.o(.text.CloseWindow) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    main.o(.text.CloseWindow) refers to motordriver.o(.text.motorMoveUp) for motorMoveUp
    main.o(.text.CloseWindow) refers to main.o(.bss.xStateQueuePassenger) for xStateQueuePassenger
    main.o(.text.CloseWindow) refers to queue.o(.text.xQueuePeek) for xQueuePeek
    main.o(.text.CloseWindow) refers to main.o(.bss.xLimitSwitchQueue) for xLimitSwitchQueue
    main.o(.text.CloseWindow) refers to main.o(.bss.xlockingQueue) for xlockingQueue
    main.o(.text.CloseWindow) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    main.o(.text.CloseWindow) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    main.o(.ARM.exidx.text.CloseWindow) refers to main.o(.text.CloseWindow) for [Anonymous Symbol]
    main.o(.text.AutoOpenWindow) refers to main.o(.bss.xAutoOpenWindowSemaphore) for xAutoOpenWindowSemaphore
    main.o(.text.AutoOpenWindow) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    main.o(.text.AutoOpenWindow) refers to motordriver.o(.text.motorMoveDown) for motorMoveDown
    main.o(.text.AutoOpenWindow) refers to main.o(.bss.xStateQueueAutoOPenPassenger) for xStateQueueAutoOPenPassenger
    main.o(.text.AutoOpenWindow) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    main.o(.text.AutoOpenWindow) refers to main.o(.bss.xLimitSwitchQueue) for xLimitSwitchQueue
    main.o(.text.AutoOpenWindow) refers to queue.o(.text.xQueuePeek) for xQueuePeek
    main.o(.text.AutoOpenWindow) refers to main.o(.bss.xlockingQueue) for xlockingQueue
    main.o(.text.AutoOpenWindow) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    main.o(.ARM.exidx.text.AutoOpenWindow) refers to main.o(.text.AutoOpenWindow) for [Anonymous Symbol]
    main.o(.text.AutoCloseWindow) refers to main.o(.bss.xAutoCloseWindowSemaphore) for xAutoCloseWindowSemaphore
    main.o(.text.AutoCloseWindow) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    main.o(.text.AutoCloseWindow) refers to motordriver.o(.text.motorMoveUp) for motorMoveUp
    main.o(.text.AutoCloseWindow) refers to main.o(.bss.xStateQueueAutoClosePassenger) for xStateQueueAutoClosePassenger
    main.o(.text.AutoCloseWindow) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    main.o(.text.AutoCloseWindow) refers to main.o(.bss.xLimitSwitchQueue) for xLimitSwitchQueue
    main.o(.text.AutoCloseWindow) refers to queue.o(.text.xQueuePeek) for xQueuePeek
    main.o(.text.AutoCloseWindow) refers to main.o(.bss.xlockingQueue) for xlockingQueue
    main.o(.text.AutoCloseWindow) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    main.o(.ARM.exidx.text.AutoCloseWindow) refers to main.o(.text.AutoCloseWindow) for [Anonymous Symbol]
    main.o(.text.CloseWindowDriver) refers to main.o(.bss.xCloseWindowDriverSemaphore) for xCloseWindowDriverSemaphore
    main.o(.text.CloseWindowDriver) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    main.o(.text.CloseWindowDriver) refers to motordriver.o(.text.motorMoveUp) for motorMoveUp
    main.o(.text.CloseWindowDriver) refers to main.o(.bss.xStateQueueDriver) for xStateQueueDriver
    main.o(.text.CloseWindowDriver) refers to queue.o(.text.xQueuePeek) for xQueuePeek
    main.o(.text.CloseWindowDriver) refers to main.o(.bss.xLimitSwitchQueue) for xLimitSwitchQueue
    main.o(.text.CloseWindowDriver) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    main.o(.ARM.exidx.text.CloseWindowDriver) refers to main.o(.text.CloseWindowDriver) for [Anonymous Symbol]
    main.o(.text.OpenWindowDriver) refers to main.o(.bss.xOpenWindowDriverSemaphore) for xOpenWindowDriverSemaphore
    main.o(.text.OpenWindowDriver) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    main.o(.text.OpenWindowDriver) refers to motordriver.o(.text.motorMoveDown) for motorMoveDown
    main.o(.text.OpenWindowDriver) refers to main.o(.bss.xStateQueueDriver) for xStateQueueDriver
    main.o(.text.OpenWindowDriver) refers to queue.o(.text.xQueuePeek) for xQueuePeek
    main.o(.text.OpenWindowDriver) refers to main.o(.bss.xLimitSwitchQueue) for xLimitSwitchQueue
    main.o(.text.OpenWindowDriver) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    main.o(.ARM.exidx.text.OpenWindowDriver) refers to main.o(.text.OpenWindowDriver) for [Anonymous Symbol]
    main.o(.text.AutoCloseWindowDriver) refers to main.o(.bss.xAutoCloseWindowDriverSemaphore) for xAutoCloseWindowDriverSemaphore
    main.o(.text.AutoCloseWindowDriver) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    main.o(.text.AutoCloseWindowDriver) refers to motordriver.o(.text.motorMoveUp) for motorMoveUp
    main.o(.text.AutoCloseWindowDriver) refers to main.o(.bss.xStateQueueAutoCloseDriver) for xStateQueueAutoCloseDriver
    main.o(.text.AutoCloseWindowDriver) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    main.o(.text.AutoCloseWindowDriver) refers to main.o(.bss.xLimitSwitchQueue) for xLimitSwitchQueue
    main.o(.text.AutoCloseWindowDriver) refers to queue.o(.text.xQueuePeek) for xQueuePeek
    main.o(.text.AutoCloseWindowDriver) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    main.o(.ARM.exidx.text.AutoCloseWindowDriver) refers to main.o(.text.AutoCloseWindowDriver) for [Anonymous Symbol]
    main.o(.text.AutoOpenWindowDriver) refers to main.o(.bss.xAutoOpenWindowDriverSemaphore) for xAutoOpenWindowDriverSemaphore
    main.o(.text.AutoOpenWindowDriver) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    main.o(.text.AutoOpenWindowDriver) refers to motordriver.o(.text.motorMoveDown) for motorMoveDown
    main.o(.text.AutoOpenWindowDriver) refers to main.o(.bss.xStateQueueAutoOpenDriver) for xStateQueueAutoOpenDriver
    main.o(.text.AutoOpenWindowDriver) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    main.o(.text.AutoOpenWindowDriver) refers to main.o(.bss.xLimitSwitchQueue) for xLimitSwitchQueue
    main.o(.text.AutoOpenWindowDriver) refers to queue.o(.text.xQueuePeek) for xQueuePeek
    main.o(.text.AutoOpenWindowDriver) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    main.o(.ARM.exidx.text.AutoOpenWindowDriver) refers to main.o(.text.AutoOpenWindowDriver) for [Anonymous Symbol]
    main.o(.text.Timer0AIntHandler) refers to main.o(.bss.counter) for counter
    main.o(.text.Timer0AIntHandler) refers to timer.o(i.TimerIntClear) for TimerIntClear
    main.o(.ARM.exidx.text.Timer0AIntHandler) refers to main.o(.text.Timer0AIntHandler) for [Anonymous Symbol]
    main.o(.text.vApplicationIdleHook) refers to motordriver.o(.text.motorStop) for motorStop
    main.o(.ARM.exidx.text.vApplicationIdleHook) refers to main.o(.text.vApplicationIdleHook) for [Anonymous Symbol]
    dio.o(.ARM.exidx.text.delay) refers to dio.o(.text.delay) for [Anonymous Symbol]
    dio.o(.ARM.exidx.text.DIO_Init) refers to dio.o(.text.DIO_Init) for [Anonymous Symbol]
    dio.o(.ARM.exidx.text.DIO_WritePin) refers to dio.o(.text.DIO_WritePin) for [Anonymous Symbol]
    dio.o(.ARM.exidx.text.DIO_WritePort) refers to dio.o(.text.DIO_WritePort) for [Anonymous Symbol]
    dio.o(.ARM.exidx.text.DIO_ReadPin) refers to dio.o(.text.DIO_ReadPin) for [Anonymous Symbol]
    dio.o(.ARM.exidx.text.DIO_ReadPort) refers to dio.o(.text.DIO_ReadPort) for [Anonymous Symbol]
    motordriver.o(.text.motorInit) refers to sysctl.o(i.SysCtlPeripheralEnable) for SysCtlPeripheralEnable
    motordriver.o(.text.motorInit) refers to sysctl.o(i.SysCtlPeripheralReady) for SysCtlPeripheralReady
    motordriver.o(.text.motorInit) refers to gpio.o(i.GPIOPinTypeGPIOOutput) for GPIOPinTypeGPIOOutput
    motordriver.o(.ARM.exidx.text.motorInit) refers to motordriver.o(.text.motorInit) for [Anonymous Symbol]
    motordriver.o(.text.motorMoveUp) refers to gpio.o(i.GPIOPinWrite) for GPIOPinWrite
    motordriver.o(.ARM.exidx.text.motorMoveUp) refers to motordriver.o(.text.motorMoveUp) for [Anonymous Symbol]
    motordriver.o(.text.motorMoveDown) refers to gpio.o(i.GPIOPinWrite) for GPIOPinWrite
    motordriver.o(.ARM.exidx.text.motorMoveDown) refers to motordriver.o(.text.motorMoveDown) for [Anonymous Symbol]
    motordriver.o(.text.motorStop) refers to gpio.o(i.GPIOPinWrite) for GPIOPinWrite
    motordriver.o(.ARM.exidx.text.motorStop) refers to motordriver.o(.text.motorStop) for [Anonymous Symbol]
    startup_tm4c123.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_tm4c123.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_tm4c123.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_tm4c123.o(RESET) refers to startup_tm4c123.o(STACK) for __initial_sp
    startup_tm4c123.o(RESET) refers to startup_tm4c123.o(.text) for Reset_Handler
    startup_tm4c123.o(RESET) refers to port.o(.text.SVC_Handler) for SVC_Handler
    startup_tm4c123.o(RESET) refers to port.o(.text.PendSV_Handler) for PendSV_Handler
    startup_tm4c123.o(RESET) refers to port.o(.text.SysTick_Handler) for SysTick_Handler
    startup_tm4c123.o(RESET) refers to main.o(.text.GPIOA_Handler) for GPIOA_Handler
    startup_tm4c123.o(RESET) refers to main.o(.text.GPIOC_Handler) for GPIOC_Handler
    startup_tm4c123.o(RESET) refers to main.o(.text.GPIOE_Handler) for GPIOE_Handler
    startup_tm4c123.o(RESET) refers to main.o(.text.GPIOF_Handler) for GPIOF_Handler
    startup_tm4c123.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_tm4c123.o(.text) refers to system_tm4c123.o(.text.SystemInit) for SystemInit
    startup_tm4c123.o(.text) refers to __main.o(!!!main) for __main
    startup_tm4c123.o(.text) refers to startup_tm4c123.o(HEAP) for Heap_Mem
    startup_tm4c123.o(.text) refers to startup_tm4c123.o(STACK) for Stack_Mem
    system_tm4c123.o(.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.text.getOscClk) for getOscClk
    system_tm4c123.o(.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.data.SystemCoreClock) for SystemCoreClock
    system_tm4c123.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    system_tm4c123.o(.ARM.exidx.text.getOscClk) refers to system_tm4c123.o(.text.getOscClk) for [Anonymous Symbol]
    system_tm4c123.o(.ARM.exidx.text.SystemInit) refers to system_tm4c123.o(.text.SystemInit) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialise) refers to list.o(.text.vListInitialise) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialiseItem) refers to list.o(.text.vListInitialiseItem) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsertEnd) refers to list.o(.text.vListInsertEnd) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsert) refers to list.o(.text.vListInsert) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.uxListRemove) refers to list.o(.text.uxListRemove) for [Anonymous Symbol]
    port.o(.text.pxPortInitialiseStack) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.pxPortInitialiseStack) refers to port.o(.text.pxPortInitialiseStack) for [Anonymous Symbol]
    port.o(.text.prvTaskExitError) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.prvTaskExitError) refers to port.o(.text.prvTaskExitError) for [Anonymous Symbol]
    port.o(.text.SVC_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.SVC_Handler) refers to port.o(.text.SVC_Handler) for [Anonymous Symbol]
    port.o(.text.xPortStartScheduler) refers to port.o(.bss.ucMaxSysCallPriority) for ucMaxSysCallPriority
    port.o(.text.xPortStartScheduler) refers to port.o(.bss.ulMaxPRIGROUPValue) for ulMaxPRIGROUPValue
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortSetupTimerInterrupt) for vPortSetupTimerInterrupt
    port.o(.text.xPortStartScheduler) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortEnableVFP) for vPortEnableVFP
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvPortStartFirstTask) for prvPortStartFirstTask
    port.o(.text.xPortStartScheduler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.xPortStartScheduler) refers to port.o(.text.xPortStartScheduler) for [Anonymous Symbol]
    port.o(.text.vPortSetupTimerInterrupt) refers to system_tm4c123.o(.data.SystemCoreClock) for SystemCoreClock
    port.o(.text.vPortSetupTimerInterrupt) refers to port.o(.bss.ulTimerCountsForOneTick) for ulTimerCountsForOneTick
    port.o(.text.vPortSetupTimerInterrupt) refers to port.o(.bss.xMaximumPossibleSuppressedTicks) for xMaximumPossibleSuppressedTicks
    port.o(.text.vPortSetupTimerInterrupt) refers to port.o(.bss.ulStoppedTimerCompensation) for ulStoppedTimerCompensation
    port.o(.ARM.exidx.text.vPortSetupTimerInterrupt) refers to port.o(.text.vPortSetupTimerInterrupt) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortEnableVFP) refers to port.o(.text.vPortEnableVFP) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.prvPortStartFirstTask) refers to port.o(.text.prvPortStartFirstTask) for [Anonymous Symbol]
    port.o(.text.vPortEndScheduler) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortEndScheduler) refers to port.o(.text.vPortEndScheduler) for [Anonymous Symbol]
    port.o(.text.vPortEnterCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortEnterCritical) refers to port.o(.text.vPortEnterCritical) for [Anonymous Symbol]
    port.o(.text.vPortExitCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortExitCritical) refers to port.o(.text.vPortExitCritical) for [Anonymous Symbol]
    port.o(.text.PendSV_Handler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.PendSV_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.PendSV_Handler) refers to port.o(.text.PendSV_Handler) for [Anonymous Symbol]
    port.o(.text.SysTick_Handler) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    port.o(.ARM.exidx.text.SysTick_Handler) refers to port.o(.text.SysTick_Handler) for [Anonymous Symbol]
    port.o(.text.vPortSuppressTicksAndSleep) refers to port.o(.bss.xMaximumPossibleSuppressedTicks) for xMaximumPossibleSuppressedTicks
    port.o(.text.vPortSuppressTicksAndSleep) refers to tasks.o(.text.eTaskConfirmSleepModeStatus) for eTaskConfirmSleepModeStatus
    port.o(.text.vPortSuppressTicksAndSleep) refers to port.o(.bss.ulTimerCountsForOneTick) for ulTimerCountsForOneTick
    port.o(.text.vPortSuppressTicksAndSleep) refers to port.o(.bss.ulStoppedTimerCompensation) for ulStoppedTimerCompensation
    port.o(.text.vPortSuppressTicksAndSleep) refers to tasks.o(.text.vTaskStepTick) for vTaskStepTick
    port.o(.ARM.exidx.text.vPortSuppressTicksAndSleep) refers to port.o(.text.vPortSuppressTicksAndSleep) for [Anonymous Symbol]
    port.o(.text.vPortValidateInterruptPriority) refers to port.o(.bss.ucMaxSysCallPriority) for ucMaxSysCallPriority
    port.o(.text.vPortValidateInterruptPriority) refers to port.o(.bss.ulMaxPRIGROUPValue) for ulMaxPRIGROUPValue
    port.o(.ARM.exidx.text.vPortValidateInterruptPriority) refers to port.o(.text.vPortValidateInterruptPriority) for [Anonymous Symbol]
    heap_4.o(.text.pvPortMalloc) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.text.prvHeapInit) for prvHeapInit
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.text.prvInsertBlockIntoFreeList) for prvInsertBlockIntoFreeList
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xNumberOfSuccessfulAllocations) for xNumberOfSuccessfulAllocations
    heap_4.o(.text.pvPortMalloc) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.ARM.exidx.text.pvPortMalloc) refers to heap_4.o(.text.pvPortMalloc) for [Anonymous Symbol]
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.ucHeap) for ucHeap
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.ARM.exidx.text.prvHeapInit) refers to heap_4.o(.text.prvHeapInit) for [Anonymous Symbol]
    heap_4.o(.text.prvInsertBlockIntoFreeList) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.prvInsertBlockIntoFreeList) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.ARM.exidx.text.prvInsertBlockIntoFreeList) refers to heap_4.o(.text.prvInsertBlockIntoFreeList) for [Anonymous Symbol]
    heap_4.o(.text.vPortFree) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.vPortFree) refers to heap_4.o(.text.prvInsertBlockIntoFreeList) for prvInsertBlockIntoFreeList
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.xNumberOfSuccessfulFrees) for xNumberOfSuccessfulFrees
    heap_4.o(.text.vPortFree) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.ARM.exidx.text.vPortFree) refers to heap_4.o(.text.vPortFree) for [Anonymous Symbol]
    heap_4.o(.text.xPortGetFreeHeapSize) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.ARM.exidx.text.xPortGetFreeHeapSize) refers to heap_4.o(.text.xPortGetFreeHeapSize) for [Anonymous Symbol]
    heap_4.o(.text.xPortGetMinimumEverFreeHeapSize) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.ARM.exidx.text.xPortGetMinimumEverFreeHeapSize) refers to heap_4.o(.text.xPortGetMinimumEverFreeHeapSize) for [Anonymous Symbol]
    heap_4.o(.ARM.exidx.text.vPortInitialiseBlocks) refers to heap_4.o(.text.vPortInitialiseBlocks) for [Anonymous Symbol]
    heap_4.o(.text.pvPortCalloc) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    heap_4.o(.text.pvPortCalloc) refers to rt_memclr.o(.text) for __aeabi_memclr
    heap_4.o(.ARM.exidx.text.pvPortCalloc) refers to heap_4.o(.text.pvPortCalloc) for [Anonymous Symbol]
    heap_4.o(.text.vPortGetHeapStats) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.vPortGetHeapStats) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.text.vPortGetHeapStats) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xNumberOfSuccessfulAllocations) for xNumberOfSuccessfulAllocations
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xNumberOfSuccessfulFrees) for xNumberOfSuccessfulFrees
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.vPortGetHeapStats) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    heap_4.o(.ARM.exidx.text.vPortGetHeapStats) refers to heap_4.o(.text.vPortGetHeapStats) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericReset) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericReset) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGenericReset) refers to queue.o(.text.xQueueGenericReset) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    queue.o(.text.xQueueGenericCreate) refers to queue.o(.text.prvInitialiseNewQueue) for prvInitialiseNewQueue
    queue.o(.ARM.exidx.text.xQueueGenericCreate) refers to queue.o(.text.xQueueGenericCreate) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseNewQueue) refers to queue.o(.text.xQueueGenericReset) for xQueueGenericReset
    queue.o(.ARM.exidx.text.prvInitialiseNewQueue) refers to queue.o(.text.prvInitialiseNewQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.prvInitialiseMutex) for prvInitialiseMutex
    queue.o(.ARM.exidx.text.xQueueCreateMutex) refers to queue.o(.text.xQueueCreateMutex) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseMutex) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.prvInitialiseMutex) refers to queue.o(.text.prvInitialiseMutex) for [Anonymous Symbol]
    queue.o(.text.xQueueGetMutexHolder) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGetMutexHolder) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGetMutexHolder) refers to queue.o(.text.xQueueGetMutexHolder) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueGetMutexHolderFromISR) refers to queue.o(.text.xQueueGetMutexHolderFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGiveMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvIsQueueFull) for prvIsQueueFull
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueueGenericSend) refers to queue.o(.text.xQueueGenericSend) for [Anonymous Symbol]
    queue.o(.text.xQueueTakeMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueTakeMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for pvTaskIncrementMutexHeldCount
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskPriorityInherit) for xTaskPriorityInherit
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for prvGetDisinheritPriorityAfterTimeout
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for vTaskPriorityDisinheritAfterTimeout
    queue.o(.ARM.exidx.text.xQueueSemaphoreTake) refers to queue.o(.text.xQueueSemaphoreTake) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueCreateCountingSemaphore) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataToQueue) refers to tasks.o(.text.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(.text.prvCopyDataToQueue) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.ARM.exidx.text.prvCopyDataToQueue) refers to queue.o(.text.prvCopyDataToQueue) for [Anonymous Symbol]
    queue.o(.text.prvNotifyQueueSetContainer) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.prvNotifyQueueSetContainer) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.prvNotifyQueueSetContainer) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.ARM.exidx.text.prvNotifyQueueSetContainer) refers to queue.o(.text.prvNotifyQueueSetContainer) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueFull) refers to queue.o(.text.prvIsQueueFull) for [Anonymous Symbol]
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvUnlockQueue) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.vTaskMissedYield) for vTaskMissedYield
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvUnlockQueue) refers to queue.o(.text.prvUnlockQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSendFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueGenericSendFromISR) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSendFromISR) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.ARM.exidx.text.xQueueGenericSendFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueGiveFromISR) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.ARM.exidx.text.xQueueGiveFromISR) refers to queue.o(.text.xQueueGiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueueReceive) refers to queue.o(.text.xQueueReceive) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataFromQueue) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.ARM.exidx.text.prvCopyDataFromQueue) refers to queue.o(.text.prvCopyDataFromQueue) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueEmpty) refers to queue.o(.text.prvIsQueueEmpty) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for [Anonymous Symbol]
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueuePeek) refers to queue.o(.text.xQueuePeek) for [Anonymous Symbol]
    queue.o(.text.xQueueReceiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueReceiveFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.ARM.exidx.text.xQueueReceiveFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueuePeekFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueuePeekFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.ARM.exidx.text.xQueuePeekFromISR) refers to queue.o(.text.xQueuePeekFromISR) for [Anonymous Symbol]
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueMessagesWaiting) refers to queue.o(.text.uxQueueMessagesWaiting) for [Anonymous Symbol]
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueSpacesAvailable) refers to queue.o(.text.uxQueueSpacesAvailable) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    queue.o(.ARM.exidx.text.vQueueDelete) refers to queue.o(.text.vQueueDelete) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueGetQueueNumber) refers to queue.o(.text.uxQueueGetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.vQueueSetQueueNumber) refers to queue.o(.text.vQueueSetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.ucQueueGetQueueType) refers to queue.o(.text.ucQueueGetQueueType) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR) refers to queue.o(.text.xQueueIsQueueEmptyFromISR) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR) refers to queue.o(.text.xQueueIsQueueFullFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateSet) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.ARM.exidx.text.xQueueCreateSet) refers to queue.o(.text.xQueueCreateSet) for [Anonymous Symbol]
    queue.o(.text.xQueueAddToSet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueAddToSet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueAddToSet) refers to queue.o(.text.xQueueAddToSet) for [Anonymous Symbol]
    queue.o(.text.xQueueRemoveFromSet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueRemoveFromSet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueRemoveFromSet) refers to queue.o(.text.xQueueRemoveFromSet) for [Anonymous Symbol]
    queue.o(.text.xQueueSelectFromSet) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    queue.o(.ARM.exidx.text.xQueueSelectFromSet) refers to queue.o(.text.xQueueSelectFromSet) for [Anonymous Symbol]
    queue.o(.text.xQueueSelectFromSetFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    queue.o(.ARM.exidx.text.xQueueSelectFromSetFromISR) refers to queue.o(.text.xQueueSelectFromSetFromISR) for [Anonymous Symbol]
    tasks.o(.text.xTaskCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    tasks.o(.text.xTaskCreate) refers to rt_memclr.o(.text) for __aeabi_memclr
    tasks.o(.text.xTaskCreate) refers to heap_4.o(.text.vPortFree) for vPortFree
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvInitialiseNewTask) for prvInitialiseNewTask
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks.o(.ARM.exidx.text.xTaskCreate) refers to tasks.o(.text.xTaskCreate) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseNewTask) refers to aeabi_memset4.o(.text) for __aeabi_memset4
    tasks.o(.text.prvInitialiseNewTask) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    tasks.o(.text.prvInitialiseNewTask) refers to port.o(.text.pxPortInitialiseStack) for pxPortInitialiseStack
    tasks.o(.ARM.exidx.text.prvInitialiseNewTask) refers to tasks.o(.text.prvInitialiseNewTask) for [Anonymous Symbol]
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvInitialiseTaskLists) for prvInitialiseTaskLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvAddNewTaskToReadyList) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskDelete) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.vTaskDelete) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.vTaskDelete) refers to tasks.o(.text.vTaskDelete) for [Anonymous Symbol]
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for [Anonymous Symbol]
    tasks.o(.text.prvDeleteTCB) refers to heap_4.o(.text.vPortFree) for vPortFree
    tasks.o(.ARM.exidx.text.prvDeleteTCB) refers to tasks.o(.text.prvDeleteTCB) for [Anonymous Symbol]
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskDelayUntil) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspendAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.vTaskSuspendAll) refers to tasks.o(.text.vTaskSuspendAll) for [Anonymous Symbol]
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskResumeAll) refers to tasks.o(.text.xTaskResumeAll) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelay) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.vTaskDelay) refers to tasks.o(.text.vTaskDelay) for [Anonymous Symbol]
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.ARM.exidx.text.eTaskGetState) refers to tasks.o(.text.eTaskGetState) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.uxTaskPriorityGet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.uxTaskPriorityGet) refers to tasks.o(.text.uxTaskPriorityGet) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR) refers to tasks.o(.text.uxTaskPriorityGetFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPrioritySet) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskPrioritySet) refers to tasks.o(.text.vTaskPrioritySet) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    tasks.o(.ARM.exidx.text.vTaskSuspend) refers to tasks.o(.text.vTaskSuspend) for [Anonymous Symbol]
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.vTaskSwitchContext) refers to tasks.o(.text.vTaskSwitchContext) for [Anonymous Symbol]
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskResume) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.vTaskResume) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskResume) refers to tasks.o(.text.vTaskResume) for [Anonymous Symbol]
    tasks.o(.text.prvTaskIsTaskSuspended) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvTaskIsTaskSuspended) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended) refers to tasks.o(.text.prvTaskIsTaskSuspended) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.ARM.exidx.text.xTaskResumeFromISR) refers to tasks.o(.text.xTaskResumeFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xIdleTaskHandle) for xIdleTaskHandle
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.prvIdleTask) for prvIdleTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.rodata.str1.1) for .L.str
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskStartScheduler) refers to port.o(.text.xPortStartScheduler) for xPortStartScheduler
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.rodata.uxTopUsedPriority) for uxTopUsedPriority
    tasks.o(.ARM.exidx.text.vTaskStartScheduler) refers to tasks.o(.text.vTaskStartScheduler) for [Anonymous Symbol]
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for prvCheckTasksWaitingTermination
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvIdleTask) refers to main.o(.text.vApplicationIdleHook) for vApplicationIdleHook
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.prvGetExpectedIdleTime) for prvGetExpectedIdleTime
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.prvIdleTask) refers to port.o(.text.vPortSuppressTicksAndSleep) for vPortSuppressTicksAndSleep
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.prvIdleTask) refers to tasks.o(.text.prvIdleTask) for [Anonymous Symbol]
    tasks.o(.text.vTaskEndScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskEndScheduler) refers to port.o(.text.vPortEndScheduler) for vPortEndScheduler
    tasks.o(.ARM.exidx.text.vTaskEndScheduler) refers to tasks.o(.text.vTaskEndScheduler) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.ARM.exidx.text.xTaskIncrementTick) refers to tasks.o(.text.xTaskIncrementTick) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCount) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCount) refers to tasks.o(.text.xTaskGetTickCount) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCountFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskGetTickCountFromISR) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR) refers to tasks.o(.text.xTaskGetTickCountFromISR) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetNumberOfTasks) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for [Anonymous Symbol]
    tasks.o(.text.pcTaskGetName) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pcTaskGetName) refers to tasks.o(.text.pcTaskGetName) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetHandle) refers to strlen.o(.text) for strlen
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.text.prvSearchForNameWithinSingleList) for prvSearchForNameWithinSingleList
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskGetHandle) refers to tasks.o(.text.xTaskGetHandle) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.prvSearchForNameWithinSingleList) refers to tasks.o(.text.prvSearchForNameWithinSingleList) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.prvListTasksWithinSingleList) for prvListTasksWithinSingleList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.uxTaskGetSystemState) refers to tasks.o(.text.uxTaskGetSystemState) for [Anonymous Symbol]
    tasks.o(.text.prvListTasksWithinSingleList) refers to tasks.o(.text.vTaskGetInfo) for vTaskGetInfo
    tasks.o(.ARM.exidx.text.prvListTasksWithinSingleList) refers to tasks.o(.text.prvListTasksWithinSingleList) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetIdleTaskHandle) refers to tasks.o(.bss.xIdleTaskHandle) for xIdleTaskHandle
    tasks.o(.ARM.exidx.text.xTaskGetIdleTaskHandle) refers to tasks.o(.text.xTaskGetIdleTaskHandle) for [Anonymous Symbol]
    tasks.o(.text.vTaskStepTick) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskStepTick) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskStepTick) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskStepTick) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskStepTick) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.vTaskStepTick) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskStepTick) refers to tasks.o(.text.vTaskStepTick) for [Anonymous Symbol]
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskCatchUpTicks) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskCatchUpTicks) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskCatchUpTicks) for [Anonymous Symbol]
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    tasks.o(.text.xTaskAbortDelay) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskAbortDelay) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskAbortDelay) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskAbortDelay) refers to tasks.o(.text.xTaskAbortDelay) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList) refers to tasks.o(.text.vTaskPlaceOnEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList) refers to tasks.o(.text.xTaskRemoveFromEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskSetTimeOutState) refers to tasks.o(.text.vTaskSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut) refers to tasks.o(.text.xTaskCheckForTimeOut) for [Anonymous Symbol]
    tasks.o(.text.vTaskMissedYield) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskMissedYield) refers to tasks.o(.text.vTaskMissedYield) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber) refers to tasks.o(.text.uxTaskGetTaskNumber) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskSetTaskNumber) refers to tasks.o(.text.vTaskSetTaskNumber) for [Anonymous Symbol]
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.ARM.exidx.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.text.eTaskConfirmSleepModeStatus) for [Anonymous Symbol]
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(.ARM.exidx.text.vTaskGetInfo) refers to tasks.o(.text.vTaskGetInfo) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.prvTaskCheckFreeStackSpace) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetStackHighWaterMark2) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskGetStackHighWaterMark2) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark2) refers to tasks.o(.text.uxTaskGetStackHighWaterMark2) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.text.uxTaskGetStackHighWaterMark) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.xTaskGetSchedulerState) refers to tasks.o(.text.xTaskGetSchedulerState) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskPriorityInherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.ARM.exidx.text.xTaskPriorityInherit) refers to tasks.o(.text.xTaskPriorityInherit) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskPriorityDisinherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit) refers to tasks.o(.text.xTaskPriorityDisinherit) for [Anonymous Symbol]
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for [Anonymous Symbol]
    tasks.o(.text.uxTaskResetEventItemValue) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue) refers to tasks.o(.text.uxTaskResetEventItemValue) for [Anonymous Symbol]
    tasks.o(.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.ulTaskGenericNotifyTake) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait) refers to tasks.o(.text.xTaskGenericNotifyWait) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotify) refers to tasks.o(.text.xTaskGenericNotify) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.text.vTaskGenericNotifyGiveFromISR) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear) refers to tasks.o(.text.xTaskGenericNotifyStateClear) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.text.ulTaskGenericNotifyValueClear) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvInitialiseTaskLists) refers to list.o(.text.vListInitialise) for vListInitialise
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList1) for xDelayedTaskList1
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList2) for xDelayedTaskList2
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.ARM.exidx.text.prvInitialiseTaskLists) refers to tasks.o(.text.prvInitialiseTaskLists) for [Anonymous Symbol]
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for [Anonymous Symbol]
    tasks.o(.text.prvGetExpectedIdleTime) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvGetExpectedIdleTime) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvGetExpectedIdleTime) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvGetExpectedIdleTime) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.prvGetExpectedIdleTime) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.prvGetExpectedIdleTime) refers to tasks.o(.text.prvGetExpectedIdleTime) for [Anonymous Symbol]
    gpio.o(i.GPIOIntRegister) refers to gpio.o(i._GPIOIntNumberGet) for _GPIOIntNumberGet
    gpio.o(i.GPIOIntRegister) refers to interrupt.o(i.IntRegister) for IntRegister
    gpio.o(i.GPIOIntRegister) refers to interrupt.o(i.IntEnable) for IntEnable
    gpio.o(i.GPIOIntRegisterPin) refers to gpio.o(i._GPIOIntNumberGet) for _GPIOIntNumberGet
    gpio.o(i.GPIOIntRegisterPin) refers to interrupt.o(i.IntRegister) for IntRegister
    gpio.o(i.GPIOIntRegisterPin) refers to interrupt.o(i.IntEnable) for IntEnable
    gpio.o(i.GPIOIntUnregister) refers to gpio.o(i._GPIOIntNumberGet) for _GPIOIntNumberGet
    gpio.o(i.GPIOIntUnregister) refers to interrupt.o(i.IntDisable) for IntDisable
    gpio.o(i.GPIOIntUnregister) refers to interrupt.o(i.IntUnregister) for IntUnregister
    gpio.o(i.GPIOIntUnregisterPin) refers to gpio.o(i._GPIOIntNumberGet) for _GPIOIntNumberGet
    gpio.o(i.GPIOIntUnregisterPin) refers to interrupt.o(i.IntDisable) for IntDisable
    gpio.o(i.GPIOIntUnregisterPin) refers to interrupt.o(i.IntUnregister) for IntUnregister
    gpio.o(i.GPIOPinConfigure) refers to gpio.o(.constdata) for .constdata
    gpio.o(i.GPIOPinTypeADC) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeADC) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeCAN) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeCAN) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeComparator) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeComparator) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeComparatorOutput) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeComparatorOutput) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeDIVSCLK) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeDIVSCLK) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeEPI) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeEPI) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeEthernetLED) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeEthernetLED) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeEthernetMII) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeEthernetMII) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeGPIOInput) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeGPIOInput) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeGPIOOutput) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeGPIOOutput) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeGPIOOutputOD) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeGPIOOutputOD) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeHibernateRTCCLK) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeHibernateRTCCLK) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeI2C) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeI2C) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeI2CSCL) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeI2CSCL) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeLCD) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeLCD) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeOneWire) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeOneWire) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypePWM) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypePWM) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeQEI) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeQEI) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeSSI) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeSSI) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeTimer) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeTimer) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeTrace) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeTrace) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeUART) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeUART) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeUSBAnalog) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeUSBAnalog) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeUSBDigital) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeUSBDigital) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeWakeHigh) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeWakeHigh) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeWakeLow) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeWakeLow) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i._GPIOIntNumberGet) refers to gpio.o(.constdata) for .constdata
    interrupt.o(i.IntDisable) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntEnable) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntIsEnabled) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntMasterDisable) refers to cpu.o(.emb_text) for CPUcpsid
    interrupt.o(i.IntMasterEnable) refers to cpu.o(.emb_text) for CPUcpsie
    interrupt.o(i.IntPendClear) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPendSet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPriorityGet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPriorityGroupingGet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPriorityGroupingSet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPriorityMaskGet) refers to cpu.o(.emb_text) for CPUbasepriGet
    interrupt.o(i.IntPriorityMaskSet) refers to cpu.o(.emb_text) for CPUbasepriSet
    interrupt.o(i.IntPrioritySet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntRegister) refers to interrupt.o(vtable) for vtable
    interrupt.o(i.IntUnregister) refers to interrupt.o(i._IntDefaultHandler) for _IntDefaultHandler
    interrupt.o(i.IntUnregister) refers to interrupt.o(vtable) for vtable
    sysctl.o(i.SysCtlClockFreqSet) refers to sysctl.o(.constdata) for .constdata
    sysctl.o(i.SysCtlClockGet) refers to sysctl.o(.constdata) for .constdata
    sysctl.o(i.SysCtlClockSet) refers to sysctl.o(.emb_text) for SysCtlDelay
    sysctl.o(i.SysCtlDeepSleep) refers to cpu.o(.emb_text) for CPUwfi
    sysctl.o(i.SysCtlIntRegister) refers to interrupt.o(i.IntRegister) for IntRegister
    sysctl.o(i.SysCtlIntRegister) refers to interrupt.o(i.IntEnable) for IntEnable
    sysctl.o(i.SysCtlIntUnregister) refers to interrupt.o(i.IntDisable) for IntDisable
    sysctl.o(i.SysCtlIntUnregister) refers to interrupt.o(i.IntUnregister) for IntUnregister
    sysctl.o(i.SysCtlSleep) refers to cpu.o(.emb_text) for CPUwfi
    sysctl.o(i.SysCtlVCOGet) refers to sysctl.o(.constdata) for .constdata
    timer.o(i.TimerIntRegister) refers to interrupt.o(i.IntRegister) for IntRegister
    timer.o(i.TimerIntRegister) refers to interrupt.o(i.IntEnable) for IntEnable
    timer.o(i.TimerIntRegister) refers to timer.o(.constdata) for .constdata
    timer.o(i.TimerIntUnregister) refers to interrupt.o(i.IntDisable) for IntDisable
    timer.o(i.TimerIntUnregister) refers to interrupt.o(i.IntUnregister) for IntUnregister
    timer.o(i.TimerIntUnregister) refers to timer.o(.constdata) for .constdata
    rt_memcpy_v6.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    aeabi_memset4.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    rt_memclr.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000009) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to boardinit2.o(.text) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(.text.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_tm4c123.o(.text) for __user_initial_stackheap
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000034) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000001) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000006) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000010) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_relocate_pie_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000035) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000027) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    libinit2.o(.ARM.Collect$$libinit$$00000001) refers to fpinit.o(x$fpl$fpinit) for _fp_init
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$0000001A) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000028) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000029) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_exit_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_wrch_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.initTimer0), (8 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.exidx.text.GPIOF_Handler), (8 bytes).
    Removing main.o(.ARM.exidx.text.GPIOA_Handler), (8 bytes).
    Removing main.o(.ARM.exidx.text.GPIOE_Handler), (8 bytes).
    Removing main.o(.ARM.exidx.text.GPIOC_Handler), (8 bytes).
    Removing main.o(.ARM.exidx.text.LimitSwitchUp), (8 bytes).
    Removing main.o(.ARM.exidx.text.LimitSwitchDown), (8 bytes).
    Removing main.o(.ARM.exidx.text.JamProtection), (8 bytes).
    Removing main.o(.ARM.exidx.text.Lock), (8 bytes).
    Removing main.o(.ARM.exidx.text.Unlock), (8 bytes).
    Removing main.o(.ARM.exidx.text.OpenWindow), (8 bytes).
    Removing main.o(.ARM.exidx.text.CloseWindow), (8 bytes).
    Removing main.o(.ARM.exidx.text.AutoOpenWindow), (8 bytes).
    Removing main.o(.ARM.exidx.text.AutoCloseWindow), (8 bytes).
    Removing main.o(.ARM.exidx.text.CloseWindowDriver), (8 bytes).
    Removing main.o(.ARM.exidx.text.OpenWindowDriver), (8 bytes).
    Removing main.o(.ARM.exidx.text.AutoCloseWindowDriver), (8 bytes).
    Removing main.o(.ARM.exidx.text.AutoOpenWindowDriver), (8 bytes).
    Removing main.o(.ARM.exidx.text.Timer0AIntHandler), (8 bytes).
    Removing main.o(.ARM.exidx.text.vApplicationIdleHook), (8 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing dio.o(.text), (0 bytes).
    Removing dio.o(.ARM.exidx.text.delay), (8 bytes).
    Removing dio.o(.text.DIO_Init), (1186 bytes).
    Removing dio.o(.ARM.exidx.text.DIO_Init), (8 bytes).
    Removing dio.o(.text.DIO_WritePin), (372 bytes).
    Removing dio.o(.ARM.exidx.text.DIO_WritePin), (8 bytes).
    Removing dio.o(.text.DIO_WritePort), (116 bytes).
    Removing dio.o(.ARM.exidx.text.DIO_WritePort), (8 bytes).
    Removing dio.o(.text.DIO_ReadPin), (184 bytes).
    Removing dio.o(.ARM.exidx.text.DIO_ReadPin), (8 bytes).
    Removing dio.o(.text.DIO_ReadPort), (122 bytes).
    Removing dio.o(.ARM.exidx.text.DIO_ReadPort), (8 bytes).
    Removing motordriver.o(.text), (0 bytes).
    Removing motordriver.o(.ARM.exidx.text.motorInit), (8 bytes).
    Removing motordriver.o(.ARM.exidx.text.motorMoveUp), (8 bytes).
    Removing motordriver.o(.ARM.exidx.text.motorMoveDown), (8 bytes).
    Removing motordriver.o(.ARM.exidx.text.motorStop), (8 bytes).
    Removing system_tm4c123.o(.text), (0 bytes).
    Removing system_tm4c123.o(.text.SystemCoreClockUpdate), (326 bytes).
    Removing system_tm4c123.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_tm4c123.o(.text.getOscClk), (360 bytes).
    Removing system_tm4c123.o(.ARM.exidx.text.getOscClk), (8 bytes).
    Removing system_tm4c123.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing freertos_evr.o(.text), (0 bytes).
    Removing list.o(.text), (0 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialise), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialiseItem), (8 bytes).
    Removing list.o(.text.vListInsertEnd), (58 bytes).
    Removing list.o(.ARM.exidx.text.vListInsertEnd), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsert), (8 bytes).
    Removing list.o(.ARM.exidx.text.uxListRemove), (8 bytes).
    Removing port.o(.text), (0 bytes).
    Removing port.o(.ARM.exidx.text.pxPortInitialiseStack), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvTaskExitError), (8 bytes).
    Removing port.o(.ARM.exidx.text.SVC_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.xPortStartScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortSetupTimerInterrupt), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnableVFP), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvPortStartFirstTask), (8 bytes).
    Removing port.o(.text.vPortEndScheduler), (46 bytes).
    Removing port.o(.ARM.exidx.text.vPortEndScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnterCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortExitCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.PendSV_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortSuppressTicksAndSleep), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortValidateInterruptPriority), (8 bytes).
    Removing heap_4.o(.text), (0 bytes).
    Removing heap_4.o(.ARM.exidx.text.pvPortMalloc), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.prvHeapInit), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.prvInsertBlockIntoFreeList), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortFree), (8 bytes).
    Removing heap_4.o(.text.xPortGetFreeHeapSize), (12 bytes).
    Removing heap_4.o(.ARM.exidx.text.xPortGetFreeHeapSize), (8 bytes).
    Removing heap_4.o(.text.xPortGetMinimumEverFreeHeapSize), (12 bytes).
    Removing heap_4.o(.ARM.exidx.text.xPortGetMinimumEverFreeHeapSize), (8 bytes).
    Removing heap_4.o(.text.vPortInitialiseBlocks), (2 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortInitialiseBlocks), (8 bytes).
    Removing heap_4.o(.text.pvPortCalloc), (92 bytes).
    Removing heap_4.o(.ARM.exidx.text.pvPortCalloc), (8 bytes).
    Removing heap_4.o(.text.vPortGetHeapStats), (206 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortGetHeapStats), (8 bytes).
    Removing queue.o(.text), (0 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericReset), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericCreate), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseNewQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateMutex), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseMutex), (8 bytes).
    Removing queue.o(.text.xQueueGetMutexHolder), (74 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGetMutexHolder), (8 bytes).
    Removing queue.o(.text.xQueueGetMutexHolderFromISR), (60 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGetMutexHolderFromISR), (8 bytes).
    Removing queue.o(.text.xQueueGiveMutexRecursive), (108 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSend), (8 bytes).
    Removing queue.o(.text.xQueueTakeMutexRecursive), (110 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSemaphoreTake), (8 bytes).
    Removing queue.o(.text.xQueueCreateCountingSemaphore), (94 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataToQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvNotifyQueueSetContainer), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueFull), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvUnlockQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSendFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataFromQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueEmpty), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeek), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceiveFromISR), (8 bytes).
    Removing queue.o(.text.xQueuePeekFromISR), (212 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeekFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaiting), (8 bytes).
    Removing queue.o(.text.uxQueueSpacesAvailable), (62 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueSpacesAvailable), (8 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR), (8 bytes).
    Removing queue.o(.text.vQueueDelete), (48 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueDelete), (8 bytes).
    Removing queue.o(.text.uxQueueGetQueueNumber), (12 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueGetQueueNumber), (8 bytes).
    Removing queue.o(.text.vQueueSetQueueNumber), (16 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueSetQueueNumber), (8 bytes).
    Removing queue.o(.text.ucQueueGetQueueType), (14 bytes).
    Removing queue.o(.ARM.exidx.text.ucQueueGetQueueType), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueEmptyFromISR), (62 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueFullFromISR), (68 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR), (8 bytes).
    Removing queue.o(.text.xQueueCreateSet), (24 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateSet), (8 bytes).
    Removing queue.o(.text.xQueueAddToSet), (64 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueAddToSet), (8 bytes).
    Removing queue.o(.text.xQueueRemoveFromSet), (72 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueRemoveFromSet), (8 bytes).
    Removing queue.o(.text.xQueueSelectFromSet), (28 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSelectFromSet), (8 bytes).
    Removing queue.o(.text.xQueueSelectFromSetFromISR), (24 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSelectFromSetFromISR), (8 bytes).
    Removing tasks.o(.text), (0 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCreate), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseNewTask), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList), (8 bytes).
    Removing tasks.o(.text.vTaskDelete), (340 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelete), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvDeleteTCB), (8 bytes).
    Removing tasks.o(.text.xTaskDelayUntil), (278 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskDelayUntil), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspendAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeAll), (8 bytes).
    Removing tasks.o(.text.vTaskDelay), (110 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelay), (8 bytes).
    Removing tasks.o(.text.eTaskGetState), (272 bytes).
    Removing tasks.o(.ARM.exidx.text.eTaskGetState), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGet), (56 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGet), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGetFromISR), (90 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskPrioritySet), (484 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPrioritySet), (8 bytes).
    Removing tasks.o(.text.vTaskSuspend), (378 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspend), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSwitchContext), (8 bytes).
    Removing tasks.o(.text.vTaskResume), (264 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskResume), (8 bytes).
    Removing tasks.o(.text.prvTaskIsTaskSuspended), (106 bytes).
    Removing tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended), (8 bytes).
    Removing tasks.o(.text.xTaskResumeFromISR), (304 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeFromISR), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskStartScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvIdleTask), (8 bytes).
    Removing tasks.o(.text.vTaskEndScheduler), (42 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskEndScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskIncrementTick), (8 bytes).
    Removing tasks.o(.text.xTaskGetTickCount), (20 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCount), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks), (8 bytes).
    Removing tasks.o(.text.pcTaskGetName), (70 bytes).
    Removing tasks.o(.ARM.exidx.text.pcTaskGetName), (8 bytes).
    Removing tasks.o(.text.xTaskGetHandle), (210 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetHandle), (8 bytes).
    Removing tasks.o(.text.prvSearchForNameWithinSingleList), (228 bytes).
    Removing tasks.o(.ARM.exidx.text.prvSearchForNameWithinSingleList), (8 bytes).
    Removing tasks.o(.text.uxTaskGetSystemState), (272 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetSystemState), (8 bytes).
    Removing tasks.o(.text.prvListTasksWithinSingleList), (164 bytes).
    Removing tasks.o(.ARM.exidx.text.prvListTasksWithinSingleList), (8 bytes).
    Removing tasks.o(.text.xTaskGetIdleTaskHandle), (52 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetIdleTaskHandle), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskStepTick), (8 bytes).
    Removing tasks.o(.text.xTaskCatchUpTicks), (82 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCatchUpTicks), (8 bytes).
    Removing tasks.o(.text.xTaskAbortDelay), (270 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskAbortDelay), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList), (8 bytes).
    Removing tasks.o(.text.vTaskPlaceOnUnorderedEventList), (156 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList), (8 bytes).
    Removing tasks.o(.text.vTaskRemoveFromUnorderedEventList), (362 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList), (8 bytes).
    Removing tasks.o(.text.vTaskSetTimeOutState), (74 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskMissedYield), (8 bytes).
    Removing tasks.o(.text.uxTaskGetTaskNumber), (34 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber), (8 bytes).
    Removing tasks.o(.text.vTaskSetTaskNumber), (28 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTaskNumber), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.eTaskConfirmSleepModeStatus), (8 bytes).
    Removing tasks.o(.text.vTaskGetInfo), (224 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGetInfo), (8 bytes).
    Removing tasks.o(.text.prvTaskCheckFreeStackSpace), (48 bytes).
    Removing tasks.o(.ARM.exidx.text.prvTaskCheckFreeStackSpace), (8 bytes).
    Removing tasks.o(.text.uxTaskGetStackHighWaterMark2), (60 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark2), (8 bytes).
    Removing tasks.o(.text.uxTaskGetStackHighWaterMark), (56 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark), (8 bytes).
    Removing tasks.o(.text.xTaskGetCurrentTaskHandle), (20 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetSchedulerState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityInherit), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout), (8 bytes).
    Removing tasks.o(.text.uxTaskResetEventItemValue), (34 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyTake), (248 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyWait), (280 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotify), (558 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotify), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyFromISR), (668 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskGenericNotifyGiveFromISR), (498 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyStateClear), (120 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyValueClear), (82 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseTaskLists), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvGetExpectedIdleTime), (8 bytes).
    Removing gpio.o(i.GPIOADCTriggerDisable), (14 bytes).
    Removing gpio.o(i.GPIOADCTriggerEnable), (12 bytes).
    Removing gpio.o(i.GPIODMATriggerDisable), (14 bytes).
    Removing gpio.o(i.GPIODMATriggerEnable), (12 bytes).
    Removing gpio.o(i.GPIODirModeGet), (34 bytes).
    Removing gpio.o(i.GPIOIntDisable), (14 bytes).
    Removing gpio.o(i.GPIOIntRegisterPin), (30 bytes).
    Removing gpio.o(i.GPIOIntTypeGet), (70 bytes).
    Removing gpio.o(i.GPIOIntUnregister), (22 bytes).
    Removing gpio.o(i.GPIOIntUnregisterPin), (26 bytes).
    Removing gpio.o(i.GPIOPadConfigGet), (248 bytes).
    Removing gpio.o(i.GPIOPinConfigure), (68 bytes).
    Removing gpio.o(i.GPIOPinTypeADC), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeCAN), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeComparator), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeComparatorOutput), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeDIVSCLK), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeEPI), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeEthernetLED), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeEthernetMII), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeGPIOOutputOD), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeHibernateRTCCLK), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeI2C), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeI2CSCL), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeLCD), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeOneWire), (28 bytes).
    Removing gpio.o(i.GPIOPinTypePWM), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeQEI), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeSSI), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeTimer), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeTrace), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeUART), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeUSBAnalog), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeUSBDigital), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeWakeHigh), (30 bytes).
    Removing gpio.o(i.GPIOPinTypeWakeLow), (30 bytes).
    Removing gpio.o(i.GPIOPinWakeStatus), (6 bytes).
    Removing interrupt.o(i.IntDisable), (100 bytes).
    Removing interrupt.o(i.IntIsEnabled), (96 bytes).
    Removing interrupt.o(i.IntMasterDisable), (14 bytes).
    Removing interrupt.o(i.IntPendClear), (68 bytes).
    Removing interrupt.o(i.IntPendSet), (84 bytes).
    Removing interrupt.o(i.IntPriorityGet), (28 bytes).
    Removing interrupt.o(i.IntPriorityGroupingGet), (36 bytes).
    Removing interrupt.o(i.IntPriorityGroupingSet), (28 bytes).
    Removing interrupt.o(i.IntPriorityMaskGet), (4 bytes).
    Removing interrupt.o(i.IntPriorityMaskSet), (4 bytes).
    Removing interrupt.o(i.IntTrigger), (12 bytes).
    Removing interrupt.o(i.IntUnregister), (20 bytes).
    Removing interrupt.o(i._IntDefaultHandler), (2 bytes).
    Removing sysctl.o(.emb_text), (6 bytes).
    Removing sysctl.o(i.SysCtlAltClkConfig), (12 bytes).
    Removing sysctl.o(i.SysCtlClockFreqSet), (740 bytes).
    Removing sysctl.o(i.SysCtlClockGet), (340 bytes).
    Removing sysctl.o(i.SysCtlClockOutConfig), (20 bytes).
    Removing sysctl.o(i.SysCtlClockSet), (288 bytes).
    Removing sysctl.o(i.SysCtlDeepSleep), (32 bytes).
    Removing sysctl.o(i.SysCtlDeepSleepClockConfigSet), (112 bytes).
    Removing sysctl.o(i.SysCtlDeepSleepClockSet), (12 bytes).
    Removing sysctl.o(i.SysCtlDeepSleepPowerSet), (12 bytes).
    Removing sysctl.o(i.SysCtlFlashSectorSizeGet), (56 bytes).
    Removing sysctl.o(i.SysCtlFlashSizeGet), (56 bytes).
    Removing sysctl.o(i.SysCtlGPIOAHBDisable), (28 bytes).
    Removing sysctl.o(i.SysCtlGPIOAHBEnable), (24 bytes).
    Removing sysctl.o(i.SysCtlIntClear), (12 bytes).
    Removing sysctl.o(i.SysCtlIntDisable), (16 bytes).
    Removing sysctl.o(i.SysCtlIntEnable), (16 bytes).
    Removing sysctl.o(i.SysCtlIntRegister), (20 bytes).
    Removing sysctl.o(i.SysCtlIntStatus), (16 bytes).
    Removing sysctl.o(i.SysCtlIntUnregister), (18 bytes).
    Removing sysctl.o(i.SysCtlLDODeepSleepGet), (12 bytes).
    Removing sysctl.o(i.SysCtlLDODeepSleepSet), (12 bytes).
    Removing sysctl.o(i.SysCtlLDOSleepGet), (12 bytes).
    Removing sysctl.o(i.SysCtlLDOSleepSet), (12 bytes).
    Removing sysctl.o(i.SysCtlMOSCConfigSet), (12 bytes).
    Removing sysctl.o(i.SysCtlNMIClear), (16 bytes).
    Removing sysctl.o(i.SysCtlNMIStatus), (12 bytes).
    Removing sysctl.o(i.SysCtlPIOSCCalibrate), (76 bytes).
    Removing sysctl.o(i.SysCtlPWMClockGet), (24 bytes).
    Removing sysctl.o(i.SysCtlPWMClockSet), (20 bytes).
    Removing sysctl.o(i.SysCtlPeripheralClockGating), (68 bytes).
    Removing sysctl.o(i.SysCtlPeripheralDeepSleepDisable), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralDeepSleepEnable), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralDisable), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralPowerOff), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralPowerOn), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralPresent), (44 bytes).
    Removing sysctl.o(i.SysCtlPeripheralReset), (60 bytes).
    Removing sysctl.o(i.SysCtlPeripheralSleepDisable), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralSleepEnable), (40 bytes).
    Removing sysctl.o(i.SysCtlReset), (16 bytes).
    Removing sysctl.o(i.SysCtlResetBehaviorGet), (12 bytes).
    Removing sysctl.o(i.SysCtlResetBehaviorSet), (12 bytes).
    Removing sysctl.o(i.SysCtlResetCauseClear), (16 bytes).
    Removing sysctl.o(i.SysCtlResetCauseGet), (12 bytes).
    Removing sysctl.o(i.SysCtlSRAMSizeGet), (16 bytes).
    Removing sysctl.o(i.SysCtlSleep), (4 bytes).
    Removing sysctl.o(i.SysCtlSleepPowerSet), (12 bytes).
    Removing sysctl.o(i.SysCtlUSBPLLDisable), (16 bytes).
    Removing sysctl.o(i.SysCtlUSBPLLEnable), (16 bytes).
    Removing sysctl.o(i.SysCtlVCOGet), (120 bytes).
    Removing sysctl.o(i.SysCtlVoltageEventClear), (16 bytes).
    Removing sysctl.o(i.SysCtlVoltageEventConfig), (12 bytes).
    Removing sysctl.o(i.SysCtlVoltageEventStatus), (12 bytes).
    Removing sysctl.o(.constdata), (596 bytes).
    Removing timer.o(i.TimerADCEventGet), (4 bytes).
    Removing timer.o(i.TimerADCEventSet), (4 bytes).
    Removing timer.o(i.TimerClockSourceGet), (6 bytes).
    Removing timer.o(i.TimerClockSourceSet), (6 bytes).
    Removing timer.o(i.TimerControlEvent), (18 bytes).
    Removing timer.o(i.TimerControlLevel), (22 bytes).
    Removing timer.o(i.TimerControlStall), (22 bytes).
    Removing timer.o(i.TimerControlTrigger), (80 bytes).
    Removing timer.o(i.TimerControlWaitOnTrigger), (48 bytes).
    Removing timer.o(i.TimerDMAEventGet), (4 bytes).
    Removing timer.o(i.TimerDMAEventSet), (4 bytes).
    Removing timer.o(i.TimerIntDisable), (10 bytes).
    Removing timer.o(i.TimerIntStatus), (10 bytes).
    Removing timer.o(i.TimerIntUnregister), (104 bytes).
    Removing timer.o(i.TimerLoadGet), (10 bytes).
    Removing timer.o(i.TimerLoadGet64), (14 bytes).
    Removing timer.o(i.TimerLoadSet64), (6 bytes).
    Removing timer.o(i.TimerMatchGet), (10 bytes).
    Removing timer.o(i.TimerMatchGet64), (14 bytes).
    Removing timer.o(i.TimerMatchSet), (18 bytes).
    Removing timer.o(i.TimerMatchSet64), (6 bytes).
    Removing timer.o(i.TimerPrescaleGet), (10 bytes).
    Removing timer.o(i.TimerPrescaleMatchGet), (10 bytes).
    Removing timer.o(i.TimerPrescaleMatchSet), (18 bytes).
    Removing timer.o(i.TimerPrescaleSet), (18 bytes).
    Removing timer.o(i.TimerRTCDisable), (10 bytes).
    Removing timer.o(i.TimerRTCEnable), (10 bytes).
    Removing timer.o(i.TimerSynchronize), (4 bytes).
    Removing timer.o(i.TimerUpdateMode), (42 bytes).
    Removing timer.o(i.TimerValueGet), (10 bytes).
    Removing timer.o(i.TimerValueGet64), (14 bytes).

387 unused section(s) (total 18936 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit2.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/dczerorl.s                 0x00000000   Number         0  __dczerorl.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch_hlt.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_v6.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  aeabi_memset4.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr_w.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../clib/string.c                         0x00000000   Number         0  strlen.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    DIO.c                                    0x00000000   Number         0  dio.o ABSOLUTE
    RTE/Device/TM4C123GH6PM/startup_TM4C123.s 0x00000000   Number         0  startup_tm4c123.o ABSOLUTE
    cpu.c                                    0x00000000   Number         0  cpu.o ABSOLUTE
    cpu.c                                    0x00000000   Number         0  cpu.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    freertos_evr.c                           0x00000000   Number         0  freertos_evr.o ABSOLUTE
    gpio.c                                   0x00000000   Number         0  gpio.o ABSOLUTE
    heap_4.c                                 0x00000000   Number         0  heap_4.o ABSOLUTE
    interrupt.c                              0x00000000   Number         0  interrupt.o ABSOLUTE
    list.c                                   0x00000000   Number         0  list.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    motorDriver.c                            0x00000000   Number         0  motordriver.o ABSOLUTE
    port.c                                   0x00000000   Number         0  port.o ABSOLUTE
    queue.c                                  0x00000000   Number         0  queue.o ABSOLUTE
    sysctl.c                                 0x00000000   Number         0  sysctl.o ABSOLUTE
    sysctl.c                                 0x00000000   Number         0  sysctl.o ABSOLUTE
    system_TM4C123.c                         0x00000000   Number         0  system_tm4c123.o ABSOLUTE
    tasks.c                                  0x00000000   Number         0  tasks.o ABSOLUTE
    timer.c                                  0x00000000   Number         0  timer.o ABSOLUTE
    RESET                                    0x00000000   Section      620  startup_tm4c123.o(RESET)
    !!!main                                  0x0000026c   Section        8  __main.o(!!!main)
    !!!scatter                               0x00000274   Section       52  __scatter.o(!!!scatter)
    !!dczerorl                               0x000002a8   Section       58  __dczerorl.o(!!dczerorl)
    !!handler_zi                             0x000002e4   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x00000300   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000001          0x00000302   Section        4  libinit2.o(.ARM.Collect$$libinit$$00000001)
    .ARM.Collect$$libinit$$00000004          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$00000006          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    .ARM.Collect$$libinit$$0000000C          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000010          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    .ARM.Collect$$libinit$$00000013          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$00000027          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    .ARM.Collect$$libinit$$0000002E          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000034          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    .ARM.Collect$$libinit$$00000035          0x00000306   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000035)
    .ARM.Collect$$libshutdown$$00000000      0x00000308   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x0000030a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x0000030a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x0000030a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x0000030a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x0000030a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x0000030a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x0000030a   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x0000030c   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x0000030c   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x0000030c   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000009          0x00000312   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    .ARM.Collect$$rtentry$$0000000A          0x00000312   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x00000316   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x00000316   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x0000031e   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x00000320   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x00000320   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x00000324   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    $v0                                      0x0000032c   Number         0  cpu.o(.emb_text)
    .emb_text                                0x0000032c   Section       38  cpu.o(.emb_text)
    $v0                                      0x00000354   Number         0  startup_tm4c123.o(.text)
    .text                                    0x00000354   Section      276  startup_tm4c123.o(.text)
    .text                                    0x00000468   Section      138  rt_memcpy_v6.o(.text)
    .text                                    0x000004f2   Section       16  aeabi_memset4.o(.text)
    .text                                    0x00000502   Section       68  rt_memclr.o(.text)
    .text                                    0x00000546   Section        0  heapauxi.o(.text)
    .text                                    0x0000054c   Section      100  rt_memcpy_w.o(.text)
    .text                                    0x000005b0   Section       78  rt_memclr_w.o(.text)
    .text                                    0x000005fe   Section       74  sys_stackheap_outer.o(.text)
    .text                                    0x00000648   Section        0  exit.o(.text)
    .text                                    0x0000065c   Section        8  libspace.o(.text)
    .text                                    0x00000664   Section        0  sys_exit.o(.text)
    .text                                    0x00000670   Section        2  use_no_semi.o(.text)
    .text                                    0x00000672   Section        0  indicate_semi.o(.text)
    AutoCloseWindow                          0x00000675   Thumb Code   148  main.o(.text.AutoCloseWindow)
    [Anonymous Symbol]                       0x00000674   Section        0  main.o(.text.AutoCloseWindow)
    AutoCloseWindowDriver                    0x00000709   Thumb Code   126  main.o(.text.AutoCloseWindowDriver)
    [Anonymous Symbol]                       0x00000708   Section        0  main.o(.text.AutoCloseWindowDriver)
    AutoOpenWindow                           0x00000789   Thumb Code   146  main.o(.text.AutoOpenWindow)
    [Anonymous Symbol]                       0x00000788   Section        0  main.o(.text.AutoOpenWindow)
    AutoOpenWindowDriver                     0x0000081d   Thumb Code   126  main.o(.text.AutoOpenWindowDriver)
    [Anonymous Symbol]                       0x0000081c   Section        0  main.o(.text.AutoOpenWindowDriver)
    CloseWindow                              0x0000089d   Thumb Code   156  main.o(.text.CloseWindow)
    [Anonymous Symbol]                       0x0000089c   Section        0  main.o(.text.CloseWindow)
    CloseWindowDriver                        0x00000939   Thumb Code   138  main.o(.text.CloseWindowDriver)
    [Anonymous Symbol]                       0x00000938   Section        0  main.o(.text.CloseWindowDriver)
    [Anonymous Symbol]                       0x000009c4   Section        0  main.o(.text.GPIOA_Handler)
    [Anonymous Symbol]                       0x00000cb4   Section        0  main.o(.text.GPIOC_Handler)
    [Anonymous Symbol]                       0x00000f8c   Section        0  main.o(.text.GPIOE_Handler)
    [Anonymous Symbol]                       0x00001238   Section        0  main.o(.text.GPIOF_Handler)
    JamProtection                            0x00001455   Thumb Code   156  main.o(.text.JamProtection)
    [Anonymous Symbol]                       0x00001454   Section        0  main.o(.text.JamProtection)
    LimitSwitchDown                          0x000014f1   Thumb Code    48  main.o(.text.LimitSwitchDown)
    [Anonymous Symbol]                       0x000014f0   Section        0  main.o(.text.LimitSwitchDown)
    LimitSwitchUp                            0x00001521   Thumb Code    48  main.o(.text.LimitSwitchUp)
    [Anonymous Symbol]                       0x00001520   Section        0  main.o(.text.LimitSwitchUp)
    Lock                                     0x00001551   Thumb Code    68  main.o(.text.Lock)
    [Anonymous Symbol]                       0x00001550   Section        0  main.o(.text.Lock)
    OpenWindow                               0x00001595   Thumb Code   156  main.o(.text.OpenWindow)
    [Anonymous Symbol]                       0x00001594   Section        0  main.o(.text.OpenWindow)
    OpenWindowDriver                         0x00001631   Thumb Code   138  main.o(.text.OpenWindowDriver)
    [Anonymous Symbol]                       0x00001630   Section        0  main.o(.text.OpenWindowDriver)
    [Anonymous Symbol]                       0x000016c0   Section        0  port.o(.text.PendSV_Handler)
    pxCurrentTCBConst                        0x00001720   Number         0  port.o(.text.PendSV_Handler)
    [Anonymous Symbol]                       0x00001730   Section        0  port.o(.text.SVC_Handler)
    pxCurrentTCBConst2                       0x00001750   Number         0  port.o(.text.SVC_Handler)
    [Anonymous Symbol]                       0x00001754   Section        0  port.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x00001790   Section        0  system_tm4c123.o(.text.SystemInit)
    [Anonymous Symbol]                       0x0000189c   Section        0  main.o(.text.Timer0AIntHandler)
    Unlock                                   0x000018bd   Thumb Code   166  main.o(.text.Unlock)
    [Anonymous Symbol]                       0x000018bc   Section        0  main.o(.text.Unlock)
    [Anonymous Symbol]                       0x00001964   Section        0  dio.o(.text.delay)
    [Anonymous Symbol]                       0x0000198c   Section        0  tasks.o(.text.eTaskConfirmSleepModeStatus)
    [Anonymous Symbol]                       0x00001a0c   Section        0  main.o(.text.initTimer0)
    [Anonymous Symbol]                       0x00001a70   Section        0  main.o(.text.main)
    [Anonymous Symbol]                       0x000020e0   Section        0  motordriver.o(.text.motorInit)
    [Anonymous Symbol]                       0x0000211c   Section        0  motordriver.o(.text.motorMoveDown)
    [Anonymous Symbol]                       0x0000213c   Section        0  motordriver.o(.text.motorMoveUp)
    [Anonymous Symbol]                       0x0000215c   Section        0  motordriver.o(.text.motorStop)
    prvAddCurrentTaskToDelayedList           0x00002181   Thumb Code   290  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    [Anonymous Symbol]                       0x00002180   Section        0  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    prvAddNewTaskToReadyList                 0x000022a5   Thumb Code   340  tasks.o(.text.prvAddNewTaskToReadyList)
    [Anonymous Symbol]                       0x000022a4   Section        0  tasks.o(.text.prvAddNewTaskToReadyList)
    prvCheckTasksWaitingTermination          0x000023f9   Thumb Code    90  tasks.o(.text.prvCheckTasksWaitingTermination)
    [Anonymous Symbol]                       0x000023f8   Section        0  tasks.o(.text.prvCheckTasksWaitingTermination)
    prvCopyDataFromQueue                     0x00002455   Thumb Code    66  queue.o(.text.prvCopyDataFromQueue)
    [Anonymous Symbol]                       0x00002454   Section        0  queue.o(.text.prvCopyDataFromQueue)
    prvCopyDataToQueue                       0x00002499   Thumb Code   204  queue.o(.text.prvCopyDataToQueue)
    [Anonymous Symbol]                       0x00002498   Section        0  queue.o(.text.prvCopyDataToQueue)
    prvDeleteTCB                             0x00002565   Thumb Code    24  tasks.o(.text.prvDeleteTCB)
    [Anonymous Symbol]                       0x00002564   Section        0  tasks.o(.text.prvDeleteTCB)
    prvGetDisinheritPriorityAfterTimeout     0x0000257d   Thumb Code    38  queue.o(.text.prvGetDisinheritPriorityAfterTimeout)
    [Anonymous Symbol]                       0x0000257c   Section        0  queue.o(.text.prvGetDisinheritPriorityAfterTimeout)
    prvGetExpectedIdleTime                   0x000025a5   Thumb Code   124  tasks.o(.text.prvGetExpectedIdleTime)
    [Anonymous Symbol]                       0x000025a4   Section        0  tasks.o(.text.prvGetExpectedIdleTime)
    prvHeapInit                              0x00002621   Thumb Code   174  heap_4.o(.text.prvHeapInit)
    [Anonymous Symbol]                       0x00002620   Section        0  heap_4.o(.text.prvHeapInit)
    prvIdleTask                              0x000026d1   Thumb Code   158  tasks.o(.text.prvIdleTask)
    [Anonymous Symbol]                       0x000026d0   Section        0  tasks.o(.text.prvIdleTask)
    prvInitialiseMutex                       0x00002771   Thumb Code    44  queue.o(.text.prvInitialiseMutex)
    [Anonymous Symbol]                       0x00002770   Section        0  queue.o(.text.prvInitialiseMutex)
    prvInitialiseNewQueue                    0x0000279d   Thumb Code    78  queue.o(.text.prvInitialiseNewQueue)
    [Anonymous Symbol]                       0x0000279c   Section        0  queue.o(.text.prvInitialiseNewQueue)
    prvInitialiseNewTask                     0x000027ed   Thumb Code   292  tasks.o(.text.prvInitialiseNewTask)
    [Anonymous Symbol]                       0x000027ec   Section        0  tasks.o(.text.prvInitialiseNewTask)
    prvInitialiseTaskLists                   0x00002911   Thumb Code   142  tasks.o(.text.prvInitialiseTaskLists)
    [Anonymous Symbol]                       0x00002910   Section        0  tasks.o(.text.prvInitialiseTaskLists)
    prvInsertBlockIntoFreeList               0x000029a1   Thumb Code   198  heap_4.o(.text.prvInsertBlockIntoFreeList)
    [Anonymous Symbol]                       0x000029a0   Section        0  heap_4.o(.text.prvInsertBlockIntoFreeList)
    prvIsQueueEmpty                          0x00002a69   Thumb Code    40  queue.o(.text.prvIsQueueEmpty)
    [Anonymous Symbol]                       0x00002a68   Section        0  queue.o(.text.prvIsQueueEmpty)
    prvIsQueueFull                           0x00002a91   Thumb Code    46  queue.o(.text.prvIsQueueFull)
    [Anonymous Symbol]                       0x00002a90   Section        0  queue.o(.text.prvIsQueueFull)
    prvNotifyQueueSetContainer               0x00002ac1   Thumb Code   236  queue.o(.text.prvNotifyQueueSetContainer)
    [Anonymous Symbol]                       0x00002ac0   Section        0  queue.o(.text.prvNotifyQueueSetContainer)
    prvPortStartFirstTask                    0x00002bad   Thumb Code    40  port.o(.text.prvPortStartFirstTask)
    [Anonymous Symbol]                       0x00002bac   Section        0  port.o(.text.prvPortStartFirstTask)
    prvResetNextTaskUnblockTime              0x00002bd5   Thumb Code    60  tasks.o(.text.prvResetNextTaskUnblockTime)
    [Anonymous Symbol]                       0x00002bd4   Section        0  tasks.o(.text.prvResetNextTaskUnblockTime)
    prvTaskExitError                         0x00002c11   Thumb Code    76  port.o(.text.prvTaskExitError)
    [Anonymous Symbol]                       0x00002c10   Section        0  port.o(.text.prvTaskExitError)
    prvUnlockQueue                           0x00002c5d   Thumb Code   204  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x00002c5c   Section        0  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x00002d28   Section        0  heap_4.o(.text.pvPortMalloc)
    [Anonymous Symbol]                       0x00002ef0   Section        0  tasks.o(.text.pvTaskIncrementMutexHeldCount)
    [Anonymous Symbol]                       0x00002f1c   Section        0  port.o(.text.pxPortInitialiseStack)
    [Anonymous Symbol]                       0x00002f7c   Section        0  list.o(.text.uxListRemove)
    [Anonymous Symbol]                       0x00002fc4   Section        0  queue.o(.text.uxQueueMessagesWaiting)
    [Anonymous Symbol]                       0x00002ffc   Section        0  queue.o(.text.uxQueueMessagesWaitingFromISR)
    [Anonymous Symbol]                       0x0000302c   Section        0  tasks.o(.text.uxTaskGetNumberOfTasks)
    [Anonymous Symbol]                       0x00003038   Section        0  main.o(.text.vApplicationIdleHook)
    [Anonymous Symbol]                       0x00003040   Section        0  list.o(.text.vListInitialise)
    [Anonymous Symbol]                       0x00003070   Section        0  list.o(.text.vListInitialiseItem)
    [Anonymous Symbol]                       0x00003080   Section        0  list.o(.text.vListInsert)
    vPortEnableVFP                           0x000030ed   Thumb Code    20  port.o(.text.vPortEnableVFP)
    [Anonymous Symbol]                       0x000030ec   Section        0  port.o(.text.vPortEnableVFP)
    [Anonymous Symbol]                       0x00003100   Section        0  port.o(.text.vPortEnterCritical)
    [Anonymous Symbol]                       0x00003158   Section        0  port.o(.text.vPortExitCritical)
    [Anonymous Symbol]                       0x000031a4   Section        0  heap_4.o(.text.vPortFree)
    [Anonymous Symbol]                       0x00003260   Section        0  port.o(.text.vPortSetupTimerInterrupt)
    [Anonymous Symbol]                       0x000032d8   Section        0  port.o(.text.vPortSuppressTicksAndSleep)
    [Anonymous Symbol]                       0x000034f8   Section        0  port.o(.text.vPortValidateInterruptPriority)
    [Anonymous Symbol]                       0x0000357c   Section        0  tasks.o(.text.vTaskInternalSetTimeOutState)
    [Anonymous Symbol]                       0x000035a0   Section        0  tasks.o(.text.vTaskMissedYield)
    [Anonymous Symbol]                       0x000035b0   Section        0  tasks.o(.text.vTaskPlaceOnEventList)
    [Anonymous Symbol]                       0x000035f4   Section        0  tasks.o(.text.vTaskPriorityDisinheritAfterTimeout)
    [Anonymous Symbol]                       0x00003778   Section        0  tasks.o(.text.vTaskStartScheduler)
    [Anonymous Symbol]                       0x0000381c   Section        0  tasks.o(.text.vTaskStepTick)
    [Anonymous Symbol]                       0x000038e8   Section        0  tasks.o(.text.vTaskSuspendAll)
    __tagsym$$used.0                         0x000038f8   Number         0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x000038f8   Section        0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x000039b8   Section        0  port.o(.text.xPortStartScheduler)
    [Anonymous Symbol]                       0x00003b10   Section        0  queue.o(.text.xQueueCreateMutex)
    [Anonymous Symbol]                       0x00003b38   Section        0  queue.o(.text.xQueueGenericCreate)
    [Anonymous Symbol]                       0x00003bd4   Section        0  queue.o(.text.xQueueGenericReset)
    [Anonymous Symbol]                       0x00003cdc   Section        0  queue.o(.text.xQueueGenericSend)
    [Anonymous Symbol]                       0x00003f50   Section        0  queue.o(.text.xQueueGenericSendFromISR)
    [Anonymous Symbol]                       0x0000410c   Section        0  queue.o(.text.xQueueGiveFromISR)
    [Anonymous Symbol]                       0x00004290   Section        0  queue.o(.text.xQueuePeek)
    [Anonymous Symbol]                       0x00004470   Section        0  queue.o(.text.xQueueReceive)
    [Anonymous Symbol]                       0x0000464c   Section        0  queue.o(.text.xQueueReceiveFromISR)
    [Anonymous Symbol]                       0x0000478c   Section        0  queue.o(.text.xQueueSemaphoreTake)
    [Anonymous Symbol]                       0x0000499c   Section        0  tasks.o(.text.xTaskCheckForTimeOut)
    [Anonymous Symbol]                       0x00004a98   Section        0  tasks.o(.text.xTaskCreate)
    [Anonymous Symbol]                       0x00004b38   Section        0  tasks.o(.text.xTaskGetSchedulerState)
    [Anonymous Symbol]                       0x00004b70   Section        0  tasks.o(.text.xTaskGetTickCountFromISR)
    [Anonymous Symbol]                       0x00004b90   Section        0  tasks.o(.text.xTaskIncrementTick)
    [Anonymous Symbol]                       0x00004df0   Section        0  tasks.o(.text.xTaskPriorityDisinherit)
    [Anonymous Symbol]                       0x00004f28   Section        0  tasks.o(.text.xTaskPriorityInherit)
    [Anonymous Symbol]                       0x00005084   Section        0  tasks.o(.text.xTaskRemoveFromEventList)
    [Anonymous Symbol]                       0x00005218   Section        0  tasks.o(.text.xTaskResumeAll)
    i.GPIODirModeSet                         0x0000543a   Section        0  gpio.o(i.GPIODirModeSet)
    i.GPIOIntClear                           0x00005462   Section        0  gpio.o(i.GPIOIntClear)
    i.GPIOIntEnable                          0x00005468   Section        0  gpio.o(i.GPIOIntEnable)
    i.GPIOIntRegister                        0x00005474   Section        0  gpio.o(i.GPIOIntRegister)
    i.GPIOIntStatus                          0x0000548e   Section        0  gpio.o(i.GPIOIntStatus)
    i.GPIOIntTypeSet                         0x0000549c   Section        0  gpio.o(i.GPIOIntTypeSet)
    i.GPIOPadConfigSet                       0x000054ec   Section        0  gpio.o(i.GPIOPadConfigSet)
    i.GPIOPinRead                            0x0000565c   Section        0  gpio.o(i.GPIOPinRead)
    i.GPIOPinTypeGPIOInput                   0x00005662   Section        0  gpio.o(i.GPIOPinTypeGPIOInput)
    i.GPIOPinTypeGPIOOutput                  0x0000567e   Section        0  gpio.o(i.GPIOPinTypeGPIOOutput)
    i.GPIOPinWrite                           0x0000569a   Section        0  gpio.o(i.GPIOPinWrite)
    i.GPIOUnlockPin                          0x000056a0   Section        0  gpio.o(i.GPIOUnlockPin)
    i.IntEnable                              0x000056b8   Section        0  interrupt.o(i.IntEnable)
    i.IntMasterEnable                        0x0000571c   Section        0  interrupt.o(i.IntMasterEnable)
    i.IntPrioritySet                         0x0000572c   Section        0  interrupt.o(i.IntPrioritySet)
    i.IntRegister                            0x00005754   Section        0  interrupt.o(i.IntRegister)
    i.SysCtlPeripheralEnable                 0x00005788   Section        0  sysctl.o(i.SysCtlPeripheralEnable)
    i.SysCtlPeripheralReady                  0x000057b0   Section        0  sysctl.o(i.SysCtlPeripheralReady)
    i.TimerConfigure                         0x000057dc   Section        0  timer.o(i.TimerConfigure)
    i.TimerDisable                           0x0000583c   Section        0  timer.o(i.TimerDisable)
    i.TimerEnable                            0x0000584c   Section        0  timer.o(i.TimerEnable)
    i.TimerIntClear                          0x0000585a   Section        0  timer.o(i.TimerIntClear)
    i.TimerIntEnable                         0x0000585e   Section        0  timer.o(i.TimerIntEnable)
    i.TimerIntRegister                       0x00005868   Section        0  timer.o(i.TimerIntRegister)
    i.TimerLoadSet                           0x000058d0   Section        0  timer.o(i.TimerLoadSet)
    _GPIOIntNumberGet                        0x000058e5   Thumb Code    62  gpio.o(i._GPIOIntNumberGet)
    i._GPIOIntNumberGet                      0x000058e4   Section        0  gpio.o(i._GPIOIntNumberGet)
    $v0                                      0x00005934   Number         0  fpinit.o(x$fpl$fpinit)
    x$fpl$fpinit                             0x00005934   Section       26  fpinit.o(x$fpl$fpinit)
    g_ppui32GPIOIntMapBlizzard               0x00005950   Data         192  gpio.o(.constdata)
    .constdata                               0x00005950   Section      552  gpio.o(.constdata)
    g_ppui32GPIOIntMapSnowflake              0x00005a10   Data         216  gpio.o(.constdata)
    g_pui32GPIOBaseAddrs                     0x00005ae8   Data         144  gpio.o(.constdata)
    g_pui32Priority                          0x00005b78   Data          32  interrupt.o(.constdata)
    .constdata                               0x00005b78   Section      268  interrupt.o(.constdata)
    g_pui32Regs                              0x00005b98   Data         156  interrupt.o(.constdata)
    g_pui32EnRegs                            0x00005c34   Data          20  interrupt.o(.constdata)
    g_pui32Dii16Regs                         0x00005c48   Data          20  interrupt.o(.constdata)
    g_pui32PendRegs                          0x00005c5c   Data          20  interrupt.o(.constdata)
    g_pui32UnpendRegs                        0x00005c70   Data          20  interrupt.o(.constdata)
    g_ppui32TimerIntMap                      0x00005c84   Data          96  timer.o(.constdata)
    .constdata                               0x00005c84   Section      160  timer.o(.constdata)
    g_ppui32TimerIntMapSnowflake             0x00005ce4   Data          64  timer.o(.constdata)
    .L.str.6                                 0x00005d24   Data           7  main.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00005d24   Section        0  main.o(.rodata.str1.1)
    .L.str.8                                 0x00005d2b   Data           7  main.o(.rodata.str1.1)
    .L.str.5                                 0x00005d32   Data           5  main.o(.rodata.str1.1)
    .L.str.7                                 0x00005d37   Data           7  main.o(.rodata.str1.1)
    .L.str.4                                 0x00005d3e   Data          15  main.o(.rodata.str1.1)
    .L.str.2                                 0x00005d4d   Data          18  main.o(.rodata.str1.1)
    .L.str.3                                 0x00005d5f   Data          18  main.o(.rodata.str1.1)
    .L.str                                   0x00005d71   Data          16  main.o(.rodata.str1.1)
    .L.str.1                                 0x00005d81   Data          16  main.o(.rodata.str1.1)
    .L.str.15                                0x00005d91   Data          25  main.o(.rodata.str1.1)
    .L.str.13                                0x00005d96   Data          20  main.o(.rodata.str1.1)
    .L.str.16                                0x00005daa   Data          24  main.o(.rodata.str1.1)
    .L.str.14                                0x00005daf   Data          19  main.o(.rodata.str1.1)
    .L.str.12                                0x00005dc2   Data          18  main.o(.rodata.str1.1)
    .L.str.10                                0x00005dc7   Data          13  main.o(.rodata.str1.1)
    .L.str.11                                0x00005dd4   Data          17  main.o(.rodata.str1.1)
    .L.str.9                                 0x00005dd9   Data          12  main.o(.rodata.str1.1)
    .L.str                                   0x00005de5   Data           5  tasks.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00005de5   Section        0  tasks.o(.rodata.str1.1)
    uxCriticalNesting                        0x20000004   Data           4  port.o(.data.uxCriticalNesting)
    [Anonymous Symbol]                       0x20000004   Section        0  port.o(.data.uxCriticalNesting)
    g_pfnRAMVectors                          0x20000400   Data         620  interrupt.o(vtable)
    vtable                                   0x20000400   Section      620  interrupt.o(vtable)
    .bss                                     0x20000670   Section       96  libspace.o(.bss)
    __tagsym$$used.1                         0x200006d8   Number         0  tasks.o(.bss.pxCurrentTCB)
    pxDelayedTaskList                        0x200006dc   Data           4  tasks.o(.bss.pxDelayedTaskList)
    [Anonymous Symbol]                       0x200006dc   Section        0  tasks.o(.bss.pxDelayedTaskList)
    pxEnd                                    0x200006e0   Data           4  heap_4.o(.bss.pxEnd)
    [Anonymous Symbol]                       0x200006e0   Section        0  heap_4.o(.bss.pxEnd)
    pxOverflowDelayedTaskList                0x200006e4   Data           4  tasks.o(.bss.pxOverflowDelayedTaskList)
    [Anonymous Symbol]                       0x200006e4   Section        0  tasks.o(.bss.pxOverflowDelayedTaskList)
    pxReadyTasksLists                        0x200006e8   Data         160  tasks.o(.bss.pxReadyTasksLists)
    [Anonymous Symbol]                       0x200006e8   Section        0  tasks.o(.bss.pxReadyTasksLists)
    ucHeap                                   0x20000790   Data       20480  heap_4.o(.bss.ucHeap)
    [Anonymous Symbol]                       0x20000790   Section        0  heap_4.o(.bss.ucHeap)
    ucMaxSysCallPriority                     0x20005790   Data           1  port.o(.bss.ucMaxSysCallPriority)
    [Anonymous Symbol]                       0x20005790   Section        0  port.o(.bss.ucMaxSysCallPriority)
    ulMaxPRIGROUPValue                       0x20005794   Data           4  port.o(.bss.ulMaxPRIGROUPValue)
    [Anonymous Symbol]                       0x20005794   Section        0  port.o(.bss.ulMaxPRIGROUPValue)
    ulStoppedTimerCompensation               0x20005798   Data           4  port.o(.bss.ulStoppedTimerCompensation)
    [Anonymous Symbol]                       0x20005798   Section        0  port.o(.bss.ulStoppedTimerCompensation)
    ulTimerCountsForOneTick                  0x2000579c   Data           4  port.o(.bss.ulTimerCountsForOneTick)
    [Anonymous Symbol]                       0x2000579c   Section        0  port.o(.bss.ulTimerCountsForOneTick)
    uxCurrentNumberOfTasks                   0x200057a0   Data           4  tasks.o(.bss.uxCurrentNumberOfTasks)
    [Anonymous Symbol]                       0x200057a0   Section        0  tasks.o(.bss.uxCurrentNumberOfTasks)
    uxDeletedTasksWaitingCleanUp             0x200057a4   Data           4  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    [Anonymous Symbol]                       0x200057a4   Section        0  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    uxSchedulerSuspended                     0x200057a8   Data           4  tasks.o(.bss.uxSchedulerSuspended)
    [Anonymous Symbol]                       0x200057a8   Section        0  tasks.o(.bss.uxSchedulerSuspended)
    uxTaskNumber                             0x200057ac   Data           4  tasks.o(.bss.uxTaskNumber)
    [Anonymous Symbol]                       0x200057ac   Section        0  tasks.o(.bss.uxTaskNumber)
    uxTopReadyPriority                       0x200057b0   Data           4  tasks.o(.bss.uxTopReadyPriority)
    [Anonymous Symbol]                       0x200057b0   Section        0  tasks.o(.bss.uxTopReadyPriority)
    xDelayedTaskList1                        0x200057cc   Data          20  tasks.o(.bss.xDelayedTaskList1)
    [Anonymous Symbol]                       0x200057cc   Section        0  tasks.o(.bss.xDelayedTaskList1)
    xDelayedTaskList2                        0x200057e0   Data          20  tasks.o(.bss.xDelayedTaskList2)
    [Anonymous Symbol]                       0x200057e0   Section        0  tasks.o(.bss.xDelayedTaskList2)
    xFreeBytesRemaining                      0x200057f4   Data           4  heap_4.o(.bss.xFreeBytesRemaining)
    [Anonymous Symbol]                       0x200057f4   Section        0  heap_4.o(.bss.xFreeBytesRemaining)
    xIdleTaskHandle                          0x200057f8   Data           4  tasks.o(.bss.xIdleTaskHandle)
    [Anonymous Symbol]                       0x200057f8   Section        0  tasks.o(.bss.xIdleTaskHandle)
    xMaximumPossibleSuppressedTicks          0x20005810   Data           4  port.o(.bss.xMaximumPossibleSuppressedTicks)
    [Anonymous Symbol]                       0x20005810   Section        0  port.o(.bss.xMaximumPossibleSuppressedTicks)
    xMinimumEverFreeBytesRemaining           0x20005814   Data           4  heap_4.o(.bss.xMinimumEverFreeBytesRemaining)
    [Anonymous Symbol]                       0x20005814   Section        0  heap_4.o(.bss.xMinimumEverFreeBytesRemaining)
    xNextTaskUnblockTime                     0x20005818   Data           4  tasks.o(.bss.xNextTaskUnblockTime)
    [Anonymous Symbol]                       0x20005818   Section        0  tasks.o(.bss.xNextTaskUnblockTime)
    xNumOfOverflows                          0x2000581c   Data           4  tasks.o(.bss.xNumOfOverflows)
    [Anonymous Symbol]                       0x2000581c   Section        0  tasks.o(.bss.xNumOfOverflows)
    xNumberOfSuccessfulAllocations           0x20005820   Data           4  heap_4.o(.bss.xNumberOfSuccessfulAllocations)
    [Anonymous Symbol]                       0x20005820   Section        0  heap_4.o(.bss.xNumberOfSuccessfulAllocations)
    xNumberOfSuccessfulFrees                 0x20005824   Data           4  heap_4.o(.bss.xNumberOfSuccessfulFrees)
    [Anonymous Symbol]                       0x20005824   Section        0  heap_4.o(.bss.xNumberOfSuccessfulFrees)
    xPendedTicks                             0x20005830   Data           4  tasks.o(.bss.xPendedTicks)
    [Anonymous Symbol]                       0x20005830   Section        0  tasks.o(.bss.xPendedTicks)
    xPendingReadyList                        0x20005834   Data          20  tasks.o(.bss.xPendingReadyList)
    [Anonymous Symbol]                       0x20005834   Section        0  tasks.o(.bss.xPendingReadyList)
    xSchedulerRunning                        0x20005848   Data           4  tasks.o(.bss.xSchedulerRunning)
    [Anonymous Symbol]                       0x20005848   Section        0  tasks.o(.bss.xSchedulerRunning)
    xStart                                   0x2000584c   Data           8  heap_4.o(.bss.xStart)
    [Anonymous Symbol]                       0x2000584c   Section        0  heap_4.o(.bss.xStart)
    xSuspendedTaskList                       0x2000586c   Data          20  tasks.o(.bss.xSuspendedTaskList)
    [Anonymous Symbol]                       0x2000586c   Section        0  tasks.o(.bss.xSuspendedTaskList)
    xTasksWaitingTermination                 0x20005880   Data          20  tasks.o(.bss.xTasksWaitingTermination)
    [Anonymous Symbol]                       0x20005880   Section        0  tasks.o(.bss.xTasksWaitingTermination)
    xTickCount                               0x20005894   Data           4  tasks.o(.bss.xTickCount)
    [Anonymous Symbol]                       0x20005894   Section        0  tasks.o(.bss.xTickCount)
    xYieldPending                            0x2000589c   Data           4  tasks.o(.bss.xYieldPending)
    [Anonymous Symbol]                       0x2000589c   Section        0  tasks.o(.bss.xYieldPending)
    Heap_Mem                                 0x200058a8   Data           0  startup_tm4c123.o(HEAP)
    Stack_Mem                                0x200058a8   Data         512  startup_tm4c123.o(STACK)
    HEAP                                     0x200058a8   Section        0  startup_tm4c123.o(HEAP)
    STACK                                    0x200058a8   Section      512  startup_tm4c123.o(STACK)
    __initial_sp                             0x20005aa8   Data           0  startup_tm4c123.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$VFPi3$EXTD16$VFPS$VFMA$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __Vectors                                0x00000000   Data           4  startup_tm4c123.o(RESET)
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __arm_relocate_pie_                       - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_End                            0x0000026c   Data           0  startup_tm4c123.o(RESET)
    __Vectors_Size                           0x0000026c   Number         0  startup_tm4c123.o ABSOLUTE
    __main                                   0x0000026d   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x00000275   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x00000275   Thumb Code    44  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x00000275   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x00000283   Thumb Code     0  __scatter.o(!!!scatter)
    __decompress                             0x000002a9   Thumb Code    58  __dczerorl.o(!!dczerorl)
    __decompress0                            0x000002a9   Thumb Code     0  __dczerorl.o(!!dczerorl)
    __scatterload_zeroinit                   0x000002e5   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x00000301   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_fp_1                       0x00000303   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000001)
    __rt_lib_init_alloca_1                   0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_argv_1                     0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_atexit_1                   0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_clock_1                    0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_cpp_1                      0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    __rt_lib_init_exceptions_1               0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_fp_trap_1                  0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_getenv_1                   0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_heap_1                     0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_init_lc_collate_1               0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_ctype_1                 0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_monetary_1              0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_numeric_1               0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_lc_time_1                  0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_preinit_1                  0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    __rt_lib_init_rand_1                     0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    __rt_lib_init_relocate_pie_1             0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_return                     0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000035)
    __rt_lib_init_signal_1                   0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_stdio_1                    0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    __rt_lib_init_user_alloc_1               0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_shutdown                        0x00000309   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x0000030b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x0000030b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x0000030b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x0000030b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x0000030b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x0000030b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x0000030b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x0000030d   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x0000030d   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x0000030d   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_li                            0x00000313   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_postsh_1                      0x00000313   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    __rt_entry_main                          0x00000317   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x00000317   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x0000031f   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x00000321   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x00000321   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x00000325   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    CPUcpsid                                 0x0000032d   Thumb Code     8  cpu.o(.emb_text)
    CPUprimask                               0x00000335   Thumb Code     6  cpu.o(.emb_text)
    CPUcpsie                                 0x0000033b   Thumb Code     8  cpu.o(.emb_text)
    CPUwfi                                   0x00000343   Thumb Code     4  cpu.o(.emb_text)
    CPUbasepriSet                            0x00000347   Thumb Code     6  cpu.o(.emb_text)
    CPUbasepriGet                            0x0000034d   Thumb Code     6  cpu.o(.emb_text)
    Reset_Handler                            0x00000355   Thumb Code     8  startup_tm4c123.o(.text)
    NMI_Handler                              0x0000035d   Thumb Code     2  startup_tm4c123.o(.text)
    HardFault_Handler                        0x0000035f   Thumb Code     2  startup_tm4c123.o(.text)
    MemManage_Handler                        0x00000361   Thumb Code     2  startup_tm4c123.o(.text)
    BusFault_Handler                         0x00000363   Thumb Code     2  startup_tm4c123.o(.text)
    UsageFault_Handler                       0x00000365   Thumb Code     2  startup_tm4c123.o(.text)
    DebugMon_Handler                         0x00000369   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOB_Handler                            0x00000371   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOD_Handler                            0x00000375   Thumb Code     2  startup_tm4c123.o(.text)
    UART0_Handler                            0x00000379   Thumb Code     2  startup_tm4c123.o(.text)
    UART1_Handler                            0x0000037b   Thumb Code     2  startup_tm4c123.o(.text)
    SSI0_Handler                             0x0000037d   Thumb Code     2  startup_tm4c123.o(.text)
    I2C0_Handler                             0x0000037f   Thumb Code     2  startup_tm4c123.o(.text)
    PMW0_FAULT_Handler                       0x00000381   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_0_Handler                           0x00000383   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_1_Handler                           0x00000385   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_2_Handler                           0x00000387   Thumb Code     2  startup_tm4c123.o(.text)
    QEI0_Handler                             0x00000389   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS0_Handler                          0x0000038b   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS1_Handler                          0x0000038d   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS2_Handler                          0x0000038f   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS3_Handler                          0x00000391   Thumb Code     2  startup_tm4c123.o(.text)
    WDT0_Handler                             0x00000393   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER0A_Handler                          0x00000395   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER0B_Handler                          0x00000397   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER1A_Handler                          0x00000399   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER1B_Handler                          0x0000039b   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER2A_Handler                          0x0000039d   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER2B_Handler                          0x0000039f   Thumb Code     2  startup_tm4c123.o(.text)
    COMP0_Handler                            0x000003a1   Thumb Code     2  startup_tm4c123.o(.text)
    COMP1_Handler                            0x000003a3   Thumb Code     2  startup_tm4c123.o(.text)
    COMP2_Handler                            0x000003a5   Thumb Code     2  startup_tm4c123.o(.text)
    SYSCTL_Handler                           0x000003a7   Thumb Code     2  startup_tm4c123.o(.text)
    FLASH_Handler                            0x000003a9   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOG_Handler                            0x000003ad   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOH_Handler                            0x000003af   Thumb Code     2  startup_tm4c123.o(.text)
    UART2_Handler                            0x000003b1   Thumb Code     2  startup_tm4c123.o(.text)
    SSI1_Handler                             0x000003b3   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER3A_Handler                          0x000003b5   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER3B_Handler                          0x000003b7   Thumb Code     2  startup_tm4c123.o(.text)
    I2C1_Handler                             0x000003b9   Thumb Code     2  startup_tm4c123.o(.text)
    QEI1_Handler                             0x000003bb   Thumb Code     2  startup_tm4c123.o(.text)
    CAN0_Handler                             0x000003bd   Thumb Code     2  startup_tm4c123.o(.text)
    CAN1_Handler                             0x000003bf   Thumb Code     2  startup_tm4c123.o(.text)
    CAN2_Handler                             0x000003c1   Thumb Code     2  startup_tm4c123.o(.text)
    HIB_Handler                              0x000003c3   Thumb Code     2  startup_tm4c123.o(.text)
    USB0_Handler                             0x000003c5   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_3_Handler                           0x000003c7   Thumb Code     2  startup_tm4c123.o(.text)
    UDMA_Handler                             0x000003c9   Thumb Code     2  startup_tm4c123.o(.text)
    UDMAERR_Handler                          0x000003cb   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS0_Handler                          0x000003cd   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS1_Handler                          0x000003cf   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS2_Handler                          0x000003d1   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS3_Handler                          0x000003d3   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOJ_Handler                            0x000003d5   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOK_Handler                            0x000003d7   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOL_Handler                            0x000003d9   Thumb Code     2  startup_tm4c123.o(.text)
    SSI2_Handler                             0x000003db   Thumb Code     2  startup_tm4c123.o(.text)
    SSI3_Handler                             0x000003dd   Thumb Code     2  startup_tm4c123.o(.text)
    UART3_Handler                            0x000003df   Thumb Code     2  startup_tm4c123.o(.text)
    UART4_Handler                            0x000003e1   Thumb Code     2  startup_tm4c123.o(.text)
    UART5_Handler                            0x000003e3   Thumb Code     2  startup_tm4c123.o(.text)
    UART6_Handler                            0x000003e5   Thumb Code     2  startup_tm4c123.o(.text)
    UART7_Handler                            0x000003e7   Thumb Code     2  startup_tm4c123.o(.text)
    I2C2_Handler                             0x000003e9   Thumb Code     2  startup_tm4c123.o(.text)
    I2C3_Handler                             0x000003eb   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER4A_Handler                          0x000003ed   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER4B_Handler                          0x000003ef   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER5A_Handler                          0x000003f1   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER5B_Handler                          0x000003f3   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER0A_Handler                         0x000003f5   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER0B_Handler                         0x000003f7   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER1A_Handler                         0x000003f9   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER1B_Handler                         0x000003fb   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER2A_Handler                         0x000003fd   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER2B_Handler                         0x000003ff   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER3A_Handler                         0x00000401   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER3B_Handler                         0x00000403   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER4A_Handler                         0x00000405   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER4B_Handler                         0x00000407   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER5A_Handler                         0x00000409   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER5B_Handler                         0x0000040b   Thumb Code     2  startup_tm4c123.o(.text)
    FPU_Handler                              0x0000040d   Thumb Code     2  startup_tm4c123.o(.text)
    I2C4_Handler                             0x0000040f   Thumb Code     2  startup_tm4c123.o(.text)
    I2C5_Handler                             0x00000411   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOM_Handler                            0x00000413   Thumb Code     2  startup_tm4c123.o(.text)
    GPION_Handler                            0x00000415   Thumb Code     2  startup_tm4c123.o(.text)
    QEI2_Handler                             0x00000417   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP0_Handler                           0x00000419   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP1_Handler                           0x0000041b   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP2_Handler                           0x0000041d   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP3_Handler                           0x0000041f   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP4_Handler                           0x00000421   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP5_Handler                           0x00000423   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP6_Handler                           0x00000425   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP7_Handler                           0x00000427   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ0_Handler                           0x00000429   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ1_Handler                           0x0000042b   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ2_Handler                           0x0000042d   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ3_Handler                           0x0000042f   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ4_Handler                           0x00000431   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ5_Handler                           0x00000433   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ6_Handler                           0x00000435   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ7_Handler                           0x00000437   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOR_Handler                            0x00000439   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOS_Handler                            0x0000043b   Thumb Code     2  startup_tm4c123.o(.text)
    PMW1_0_Handler                           0x0000043d   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_1_Handler                           0x0000043f   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_2_Handler                           0x00000441   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_3_Handler                           0x00000443   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_FAULT_Handler                       0x00000445   Thumb Code     2  startup_tm4c123.o(.text)
    __user_initial_stackheap                 0x00000449   Thumb Code     0  startup_tm4c123.o(.text)
    __aeabi_memcpy                           0x00000469   Thumb Code     0  rt_memcpy_v6.o(.text)
    __rt_memcpy                              0x00000469   Thumb Code   138  rt_memcpy_v6.o(.text)
    _memcpy_lastbytes                        0x000004cf   Thumb Code     0  rt_memcpy_v6.o(.text)
    __aeabi_memset4                          0x000004f3   Thumb Code    16  aeabi_memset4.o(.text)
    __aeabi_memset8                          0x000004f3   Thumb Code     0  aeabi_memset4.o(.text)
    __aeabi_memclr                           0x00000503   Thumb Code     0  rt_memclr.o(.text)
    __rt_memclr                              0x00000503   Thumb Code     0  rt_memclr.o(.text)
    _memset                                  0x00000507   Thumb Code    64  rt_memclr.o(.text)
    __use_two_region_memory                  0x00000547   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x00000549   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x0000054b   Thumb Code     2  heapauxi.o(.text)
    __aeabi_memcpy4                          0x0000054d   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memcpy8                          0x0000054d   Thumb Code     0  rt_memcpy_w.o(.text)
    __rt_memcpy_w                            0x0000054d   Thumb Code   100  rt_memcpy_w.o(.text)
    _memcpy_lastbytes_aligned                0x00000595   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memclr4                          0x000005b1   Thumb Code     0  rt_memclr_w.o(.text)
    __aeabi_memclr8                          0x000005b1   Thumb Code     0  rt_memclr_w.o(.text)
    __rt_memclr_w                            0x000005b1   Thumb Code     0  rt_memclr_w.o(.text)
    _memset_w                                0x000005b5   Thumb Code    74  rt_memclr_w.o(.text)
    __user_setup_stackheap                   0x000005ff   Thumb Code    74  sys_stackheap_outer.o(.text)
    exit                                     0x00000649   Thumb Code    18  exit.o(.text)
    __user_libspace                          0x0000065d   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x0000065d   Thumb Code     0  libspace.o(.text)
    __user_perthread_libspace                0x0000065d   Thumb Code     0  libspace.o(.text)
    _sys_exit                                0x00000665   Thumb Code     8  sys_exit.o(.text)
    __I$use$semihosting                      0x00000671   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x00000671   Thumb Code     2  use_no_semi.o(.text)
    __semihosting_library_function           0x00000673   Thumb Code     0  indicate_semi.o(.text)
    GPIOA_Handler                            0x000009c5   Thumb Code   752  main.o(.text.GPIOA_Handler)
    GPIOC_Handler                            0x00000cb5   Thumb Code   728  main.o(.text.GPIOC_Handler)
    GPIOE_Handler                            0x00000f8d   Thumb Code   682  main.o(.text.GPIOE_Handler)
    GPIOF_Handler                            0x00001239   Thumb Code   538  main.o(.text.GPIOF_Handler)
    PendSV_Handler                           0x000016c1   Thumb Code   100  port.o(.text.PendSV_Handler)
    SVC_Handler                              0x00001731   Thumb Code    36  port.o(.text.SVC_Handler)
    SysTick_Handler                          0x00001755   Thumb Code    60  port.o(.text.SysTick_Handler)
    SystemInit                               0x00001791   Thumb Code   268  system_tm4c123.o(.text.SystemInit)
    Timer0AIntHandler                        0x0000189d   Thumb Code    30  main.o(.text.Timer0AIntHandler)
    delay                                    0x00001965   Thumb Code    40  dio.o(.text.delay)
    eTaskConfirmSleepModeStatus              0x0000198d   Thumb Code   128  tasks.o(.text.eTaskConfirmSleepModeStatus)
    initTimer0                               0x00001a0d   Thumb Code    98  main.o(.text.initTimer0)
    main                                     0x00001a71   Thumb Code  1646  main.o(.text.main)
    motorInit                                0x000020e1   Thumb Code    60  motordriver.o(.text.motorInit)
    motorMoveDown                            0x0000211d   Thumb Code    32  motordriver.o(.text.motorMoveDown)
    motorMoveUp                              0x0000213d   Thumb Code    32  motordriver.o(.text.motorMoveUp)
    motorStop                                0x0000215d   Thumb Code    34  motordriver.o(.text.motorStop)
    pvPortMalloc                             0x00002d29   Thumb Code   456  heap_4.o(.text.pvPortMalloc)
    pvTaskIncrementMutexHeldCount            0x00002ef1   Thumb Code    44  tasks.o(.text.pvTaskIncrementMutexHeldCount)
    pxPortInitialiseStack                    0x00002f1d   Thumb Code    94  port.o(.text.pxPortInitialiseStack)
    uxListRemove                             0x00002f7d   Thumb Code    72  list.o(.text.uxListRemove)
    uxQueueMessagesWaiting                   0x00002fc5   Thumb Code    54  queue.o(.text.uxQueueMessagesWaiting)
    uxQueueMessagesWaitingFromISR            0x00002ffd   Thumb Code    48  queue.o(.text.uxQueueMessagesWaitingFromISR)
    uxTaskGetNumberOfTasks                   0x0000302d   Thumb Code    12  tasks.o(.text.uxTaskGetNumberOfTasks)
    vApplicationIdleHook                     0x00003039   Thumb Code     8  main.o(.text.vApplicationIdleHook)
    vListInitialise                          0x00003041   Thumb Code    46  list.o(.text.vListInitialise)
    vListInitialiseItem                      0x00003071   Thumb Code    14  list.o(.text.vListInitialiseItem)
    vListInsert                              0x00003081   Thumb Code   106  list.o(.text.vListInsert)
    vPortEnterCritical                       0x00003101   Thumb Code    86  port.o(.text.vPortEnterCritical)
    vPortExitCritical                        0x00003159   Thumb Code    74  port.o(.text.vPortExitCritical)
    vPortFree                                0x000031a5   Thumb Code   186  heap_4.o(.text.vPortFree)
    vPortSetupTimerInterrupt                 0x00003261   Thumb Code   120  port.o(.text.vPortSetupTimerInterrupt)
    vPortSuppressTicksAndSleep               0x000032d9   Thumb Code   544  port.o(.text.vPortSuppressTicksAndSleep)
    vPortValidateInterruptPriority           0x000034f9   Thumb Code   132  port.o(.text.vPortValidateInterruptPriority)
    vTaskInternalSetTimeOutState             0x0000357d   Thumb Code    36  tasks.o(.text.vTaskInternalSetTimeOutState)
    vTaskMissedYield                         0x000035a1   Thumb Code    14  tasks.o(.text.vTaskMissedYield)
    vTaskPlaceOnEventList                    0x000035b1   Thumb Code    66  tasks.o(.text.vTaskPlaceOnEventList)
    vTaskPriorityDisinheritAfterTimeout      0x000035f5   Thumb Code   386  tasks.o(.text.vTaskPriorityDisinheritAfterTimeout)
    vTaskStartScheduler                      0x00003779   Thumb Code   162  tasks.o(.text.vTaskStartScheduler)
    vTaskStepTick                            0x0000381d   Thumb Code   204  tasks.o(.text.vTaskStepTick)
    vTaskSuspendAll                          0x000038e9   Thumb Code    16  tasks.o(.text.vTaskSuspendAll)
    vTaskSwitchContext                       0x000038f9   Thumb Code   190  tasks.o(.text.vTaskSwitchContext)
    xPortStartScheduler                      0x000039b9   Thumb Code   342  port.o(.text.xPortStartScheduler)
    xQueueCreateMutex                        0x00003b11   Thumb Code    38  queue.o(.text.xQueueCreateMutex)
    xQueueGenericCreate                      0x00003b39   Thumb Code   154  queue.o(.text.xQueueGenericCreate)
    xQueueGenericReset                       0x00003bd5   Thumb Code   264  queue.o(.text.xQueueGenericReset)
    xQueueGenericSend                        0x00003cdd   Thumb Code   628  queue.o(.text.xQueueGenericSend)
    xQueueGenericSendFromISR                 0x00003f51   Thumb Code   444  queue.o(.text.xQueueGenericSendFromISR)
    xQueueGiveFromISR                        0x0000410d   Thumb Code   386  queue.o(.text.xQueueGiveFromISR)
    xQueuePeek                               0x00004291   Thumb Code   480  queue.o(.text.xQueuePeek)
    xQueueReceive                            0x00004471   Thumb Code   476  queue.o(.text.xQueueReceive)
    xQueueReceiveFromISR                     0x0000464d   Thumb Code   318  queue.o(.text.xQueueReceiveFromISR)
    xQueueSemaphoreTake                      0x0000478d   Thumb Code   528  queue.o(.text.xQueueSemaphoreTake)
    xTaskCheckForTimeOut                     0x0000499d   Thumb Code   252  tasks.o(.text.xTaskCheckForTimeOut)
    xTaskCreate                              0x00004a99   Thumb Code   160  tasks.o(.text.xTaskCreate)
    xTaskGetSchedulerState                   0x00004b39   Thumb Code    56  tasks.o(.text.xTaskGetSchedulerState)
    xTaskGetTickCountFromISR                 0x00004b71   Thumb Code    30  tasks.o(.text.xTaskGetTickCountFromISR)
    xTaskIncrementTick                       0x00004b91   Thumb Code   608  tasks.o(.text.xTaskIncrementTick)
    xTaskPriorityDisinherit                  0x00004df1   Thumb Code   312  tasks.o(.text.xTaskPriorityDisinherit)
    xTaskPriorityInherit                     0x00004f29   Thumb Code   348  tasks.o(.text.xTaskPriorityInherit)
    xTaskRemoveFromEventList                 0x00005085   Thumb Code   402  tasks.o(.text.xTaskRemoveFromEventList)
    xTaskResumeAll                           0x00005219   Thumb Code   546  tasks.o(.text.xTaskResumeAll)
    GPIODirModeSet                           0x0000543b   Thumb Code    40  gpio.o(i.GPIODirModeSet)
    GPIOIntClear                             0x00005463   Thumb Code     6  gpio.o(i.GPIOIntClear)
    GPIOIntEnable                            0x00005469   Thumb Code    12  gpio.o(i.GPIOIntEnable)
    GPIOIntRegister                          0x00005475   Thumb Code    26  gpio.o(i.GPIOIntRegister)
    GPIOIntStatus                            0x0000548f   Thumb Code    14  gpio.o(i.GPIOIntStatus)
    GPIOIntTypeSet                           0x0000549d   Thumb Code    80  gpio.o(i.GPIOIntTypeSet)
    GPIOPadConfigSet                         0x000054ed   Thumb Code   354  gpio.o(i.GPIOPadConfigSet)
    GPIOPinRead                              0x0000565d   Thumb Code     6  gpio.o(i.GPIOPinRead)
    GPIOPinTypeGPIOInput                     0x00005663   Thumb Code    28  gpio.o(i.GPIOPinTypeGPIOInput)
    GPIOPinTypeGPIOOutput                    0x0000567f   Thumb Code    28  gpio.o(i.GPIOPinTypeGPIOOutput)
    GPIOPinWrite                             0x0000569b   Thumb Code     6  gpio.o(i.GPIOPinWrite)
    GPIOUnlockPin                            0x000056a1   Thumb Code    18  gpio.o(i.GPIOUnlockPin)
    IntEnable                                0x000056b9   Thumb Code    92  interrupt.o(i.IntEnable)
    IntMasterEnable                          0x0000571d   Thumb Code    14  interrupt.o(i.IntMasterEnable)
    IntPrioritySet                           0x0000572d   Thumb Code    36  interrupt.o(i.IntPrioritySet)
    IntRegister                              0x00005755   Thumb Code    44  interrupt.o(i.IntRegister)
    SysCtlPeripheralEnable                   0x00005789   Thumb Code    36  sysctl.o(i.SysCtlPeripheralEnable)
    SysCtlPeripheralReady                    0x000057b1   Thumb Code    40  sysctl.o(i.SysCtlPeripheralReady)
    TimerConfigure                           0x000057dd   Thumb Code    88  timer.o(i.TimerConfigure)
    TimerDisable                             0x0000583d   Thumb Code    16  timer.o(i.TimerDisable)
    TimerEnable                              0x0000584d   Thumb Code    14  timer.o(i.TimerEnable)
    TimerIntClear                            0x0000585b   Thumb Code     4  timer.o(i.TimerIntClear)
    TimerIntEnable                           0x0000585f   Thumb Code     8  timer.o(i.TimerIntEnable)
    TimerIntRegister                         0x00005869   Thumb Code    88  timer.o(i.TimerIntRegister)
    TimerLoadSet                             0x000058d1   Thumb Code    18  timer.o(i.TimerLoadSet)
    _fp_init                                 0x00005935   Thumb Code    26  fpinit.o(x$fpl$fpinit)
    __fplib_config_fpu_vfp                   0x0000594d   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    __fplib_config_pureend_doubles           0x0000594d   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    uxTopUsedPriority                        0x00005dec   Data           4  tasks.o(.rodata.uxTopUsedPriority)
    Region$$Table$$Base                      0x00005df0   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x00005e10   Number         0  anon$$obj.o(Region$$Table)
    SystemCoreClock                          0x20000000   Data           4  system_tm4c123.o(.data.SystemCoreClock)
    __libspace_start                         0x20000670   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x200006d0   Data           0  libspace.o(.bss)
    counter                                  0x200006d0   Data           4  main.o(.bss.counter)
    motorMutex                               0x200006d4   Data           4  main.o(.bss.motorMutex)
    pxCurrentTCB                             0x200006d8   Data           4  tasks.o(.bss.pxCurrentTCB)
    startTimeDriver                          0x20000788   Data           4  main.o(.bss.startTimeDriver)
    startTimePassenger                       0x2000078c   Data           4  main.o(.bss.startTimePassenger)
    xAutoCloseWindowDriverSemaphore          0x200057b4   Data           4  main.o(.bss.xAutoCloseWindowDriverSemaphore)
    xAutoCloseWindowSemaphore                0x200057b8   Data           4  main.o(.bss.xAutoCloseWindowSemaphore)
    xAutoOpenWindowDriverSemaphore           0x200057bc   Data           4  main.o(.bss.xAutoOpenWindowDriverSemaphore)
    xAutoOpenWindowSemaphore                 0x200057c0   Data           4  main.o(.bss.xAutoOpenWindowSemaphore)
    xCloseWindowDriverSemaphore              0x200057c4   Data           4  main.o(.bss.xCloseWindowDriverSemaphore)
    xCloseWindowSemaphore                    0x200057c8   Data           4  main.o(.bss.xCloseWindowSemaphore)
    xJamProtectionSemaphore                  0x200057fc   Data           4  main.o(.bss.xJamProtectionSemaphore)
    xLimitSwitchDownSemaphore                0x20005800   Data           4  main.o(.bss.xLimitSwitchDownSemaphore)
    xLimitSwitchQueue                        0x20005804   Data           4  main.o(.bss.xLimitSwitchQueue)
    xLimitSwitchUpSemaphore                  0x20005808   Data           4  main.o(.bss.xLimitSwitchUpSemaphore)
    xLockSemaphore                           0x2000580c   Data           4  main.o(.bss.xLockSemaphore)
    xOpenWindowDriverSemaphore               0x20005828   Data           4  main.o(.bss.xOpenWindowDriverSemaphore)
    xOpenWindowSemaphore                     0x2000582c   Data           4  main.o(.bss.xOpenWindowSemaphore)
    xStateQueueAutoCloseDriver               0x20005854   Data           4  main.o(.bss.xStateQueueAutoCloseDriver)
    xStateQueueAutoClosePassenger            0x20005858   Data           4  main.o(.bss.xStateQueueAutoClosePassenger)
    xStateQueueAutoOPenPassenger             0x2000585c   Data           4  main.o(.bss.xStateQueueAutoOPenPassenger)
    xStateQueueAutoOpenDriver                0x20005860   Data           4  main.o(.bss.xStateQueueAutoOpenDriver)
    xStateQueueDriver                        0x20005864   Data           4  main.o(.bss.xStateQueueDriver)
    xStateQueuePassenger                     0x20005868   Data           4  main.o(.bss.xStateQueuePassenger)
    xUnlockSemaphore                         0x20005898   Data           4  main.o(.bss.xUnlockSemaphore)
    xlockingQueue                            0x200058a0   Data           4  main.o(.bss.xlockingQueue)



==============================================================================

Memory Map of the image

  Image Entry point : 0x00000355

  Load Region LR_IROM1 (Base: 0x00000000, Size: 0x00006670, Max: 0x00040000, ABSOLUTE, COMPRESSED[0x00006018])

    Execution Region ER_IROM1 (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x00005e10, Max: 0x00040000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x0000026c   Data   RO          113    RESET               startup_tm4c123.o
    0x0000026c   0x0000026c   0x00000008   Code   RO         1542  * !!!main             c_w.l(__main.o)
    0x00000274   0x00000274   0x00000034   Code   RO         1713    !!!scatter          c_w.l(__scatter.o)
    0x000002a8   0x000002a8   0x0000003a   Code   RO         1711    !!dczerorl          c_w.l(__dczerorl.o)
    0x000002e2   0x000002e2   0x00000002   PAD
    0x000002e4   0x000002e4   0x0000001c   Code   RO         1715    !!handler_zi        c_w.l(__scatter_zi.o)
    0x00000300   0x00000300   0x00000002   Code   RO         1573    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x00000302   0x00000302   0x00000004   Code   RO         1579    .ARM.Collect$$libinit$$00000001  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1582    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1584    .ARM.Collect$$libinit$$00000006  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1587    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1589    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1591    .ARM.Collect$$libinit$$00000010  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1594    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1596    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1598    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1600    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1602    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1604    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1606    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1608    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1610    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1612    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1614    .ARM.Collect$$libinit$$00000027  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1618    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1620    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1622    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1624    .ARM.Collect$$libinit$$00000034  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000002   Code   RO         1625    .ARM.Collect$$libinit$$00000035  c_w.l(libinit2.o)
    0x00000308   0x00000308   0x00000002   Code   RO         1647    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x0000030a   0x0000030a   0x00000000   Code   RO         1662    .ARM.Collect$$libshutdown$$00000002  c_w.l(libshutdown2.o)
    0x0000030a   0x0000030a   0x00000000   Code   RO         1664    .ARM.Collect$$libshutdown$$00000004  c_w.l(libshutdown2.o)
    0x0000030a   0x0000030a   0x00000000   Code   RO         1667    .ARM.Collect$$libshutdown$$00000007  c_w.l(libshutdown2.o)
    0x0000030a   0x0000030a   0x00000000   Code   RO         1670    .ARM.Collect$$libshutdown$$0000000A  c_w.l(libshutdown2.o)
    0x0000030a   0x0000030a   0x00000000   Code   RO         1672    .ARM.Collect$$libshutdown$$0000000C  c_w.l(libshutdown2.o)
    0x0000030a   0x0000030a   0x00000000   Code   RO         1675    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x0000030a   0x0000030a   0x00000002   Code   RO         1676    .ARM.Collect$$libshutdown$$00000010  c_w.l(libshutdown2.o)
    0x0000030c   0x0000030c   0x00000000   Code   RO         1544    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x0000030c   0x0000030c   0x00000000   Code   RO         1550    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x0000030c   0x0000030c   0x00000006   Code   RO         1562    .ARM.Collect$$rtentry$$00000004  c_w.l(__rtentry4.o)
    0x00000312   0x00000312   0x00000000   Code   RO         1552    .ARM.Collect$$rtentry$$00000009  c_w.l(__rtentry2.o)
    0x00000312   0x00000312   0x00000004   Code   RO         1553    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x00000316   0x00000316   0x00000000   Code   RO         1555    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x00000316   0x00000316   0x00000008   Code   RO         1556    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x0000031e   0x0000031e   0x00000002   Code   RO         1577    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x00000320   0x00000320   0x00000000   Code   RO         1627    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x00000320   0x00000320   0x00000004   Code   RO         1628    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x00000324   0x00000324   0x00000006   Code   RO         1629    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x0000032a   0x0000032a   0x00000002   PAD
    0x0000032c   0x0000032c   0x00000026   Code   RO         1520    .emb_text           driverlib.lib(cpu.o)
    0x00000352   0x00000352   0x00000002   PAD
    0x00000354   0x00000354   0x00000114   Code   RO          114  * .text               startup_tm4c123.o
    0x00000468   0x00000468   0x0000008a   Code   RO         1534    .text               c_w.l(rt_memcpy_v6.o)
    0x000004f2   0x000004f2   0x00000010   Code   RO         1536    .text               c_w.l(aeabi_memset4.o)
    0x00000502   0x00000502   0x00000044   Code   RO         1538    .text               c_w.l(rt_memclr.o)
    0x00000546   0x00000546   0x00000006   Code   RO         1540    .text               c_w.l(heapauxi.o)
    0x0000054c   0x0000054c   0x00000064   Code   RO         1545    .text               c_w.l(rt_memcpy_w.o)
    0x000005b0   0x000005b0   0x0000004e   Code   RO         1547    .text               c_w.l(rt_memclr_w.o)
    0x000005fe   0x000005fe   0x0000004a   Code   RO         1564    .text               c_w.l(sys_stackheap_outer.o)
    0x00000648   0x00000648   0x00000012   Code   RO         1566    .text               c_w.l(exit.o)
    0x0000065a   0x0000065a   0x00000002   PAD
    0x0000065c   0x0000065c   0x00000008   Code   RO         1574    .text               c_w.l(libspace.o)
    0x00000664   0x00000664   0x0000000c   Code   RO         1637    .text               c_w.l(sys_exit.o)
    0x00000670   0x00000670   0x00000002   Code   RO         1652    .text               c_w.l(use_no_semi.o)
    0x00000672   0x00000672   0x00000000   Code   RO         1654    .text               c_w.l(indicate_semi.o)
    0x00000672   0x00000672   0x00000002   PAD
    0x00000674   0x00000674   0x00000094   Code   RO           30    .text.AutoCloseWindow  main.o
    0x00000708   0x00000708   0x0000007e   Code   RO           36    .text.AutoCloseWindowDriver  main.o
    0x00000786   0x00000786   0x00000002   PAD
    0x00000788   0x00000788   0x00000092   Code   RO           28    .text.AutoOpenWindow  main.o
    0x0000081a   0x0000081a   0x00000002   PAD
    0x0000081c   0x0000081c   0x0000007e   Code   RO           38    .text.AutoOpenWindowDriver  main.o
    0x0000089a   0x0000089a   0x00000002   PAD
    0x0000089c   0x0000089c   0x0000009c   Code   RO           26    .text.CloseWindow   main.o
    0x00000938   0x00000938   0x0000008a   Code   RO           32    .text.CloseWindowDriver  main.o
    0x000009c2   0x000009c2   0x00000002   PAD
    0x000009c4   0x000009c4   0x000002f0   Code   RO            8    .text.GPIOA_Handler  main.o
    0x00000cb4   0x00000cb4   0x000002d8   Code   RO           12    .text.GPIOC_Handler  main.o
    0x00000f8c   0x00000f8c   0x000002aa   Code   RO           10    .text.GPIOE_Handler  main.o
    0x00001236   0x00001236   0x00000002   PAD
    0x00001238   0x00001238   0x0000021a   Code   RO            6    .text.GPIOF_Handler  main.o
    0x00001452   0x00001452   0x00000002   PAD
    0x00001454   0x00001454   0x0000009c   Code   RO           18    .text.JamProtection  main.o
    0x000014f0   0x000014f0   0x00000030   Code   RO           16    .text.LimitSwitchDown  main.o
    0x00001520   0x00001520   0x00000030   Code   RO           14    .text.LimitSwitchUp  main.o
    0x00001550   0x00001550   0x00000044   Code   RO           20    .text.Lock          main.o
    0x00001594   0x00001594   0x0000009c   Code   RO           24    .text.OpenWindow    main.o
    0x00001630   0x00001630   0x0000008a   Code   RO           34    .text.OpenWindowDriver  main.o
    0x000016ba   0x000016ba   0x00000006   PAD
    0x000016c0   0x000016c0   0x00000064   Code   RO          173    .text.PendSV_Handler  port.o
    0x00001724   0x00001724   0x0000000c   PAD
    0x00001730   0x00001730   0x00000024   Code   RO          157    .text.SVC_Handler   port.o
    0x00001754   0x00001754   0x0000003c   Code   RO          175    .text.SysTick_Handler  port.o
    0x00001790   0x00001790   0x0000010c   Code   RO          125    .text.SystemInit    system_tm4c123.o
    0x0000189c   0x0000189c   0x0000001e   Code   RO           40    .text.Timer0AIntHandler  main.o
    0x000018ba   0x000018ba   0x00000002   PAD
    0x000018bc   0x000018bc   0x000000a6   Code   RO           22    .text.Unlock        main.o
    0x00001962   0x00001962   0x00000002   PAD
    0x00001964   0x00001964   0x00000028   Code   RO           78    .text.delay         dio.o
    0x0000198c   0x0000198c   0x00000080   Code   RO          403    .text.eTaskConfirmSleepModeStatus  tasks.o
    0x00001a0c   0x00001a0c   0x00000062   Code   RO            2    .text.initTimer0    main.o
    0x00001a6e   0x00001a6e   0x00000002   PAD
    0x00001a70   0x00001a70   0x0000066e   Code   RO            4    .text.main          main.o
    0x000020de   0x000020de   0x00000002   PAD
    0x000020e0   0x000020e0   0x0000003c   Code   RO           97    .text.motorInit     motordriver.o
    0x0000211c   0x0000211c   0x00000020   Code   RO          101    .text.motorMoveDown  motordriver.o
    0x0000213c   0x0000213c   0x00000020   Code   RO           99    .text.motorMoveUp   motordriver.o
    0x0000215c   0x0000215c   0x00000022   Code   RO          103    .text.motorStop     motordriver.o
    0x0000217e   0x0000217e   0x00000002   PAD
    0x00002180   0x00002180   0x00000122   Code   RO          327    .text.prvAddCurrentTaskToDelayedList  tasks.o
    0x000022a2   0x000022a2   0x00000002   PAD
    0x000022a4   0x000022a4   0x00000154   Code   RO          315    .text.prvAddNewTaskToReadyList  tasks.o
    0x000023f8   0x000023f8   0x0000005a   Code   RO          443    .text.prvCheckTasksWaitingTermination  tasks.o
    0x00002452   0x00002452   0x00000002   PAD
    0x00002454   0x00002454   0x00000042   Code   RO          264    .text.prvCopyDataFromQueue  queue.o
    0x00002496   0x00002496   0x00000002   PAD
    0x00002498   0x00002498   0x000000cc   Code   RO          250    .text.prvCopyDataToQueue  queue.o
    0x00002564   0x00002564   0x00000018   Code   RO          321    .text.prvDeleteTCB  tasks.o
    0x0000257c   0x0000257c   0x00000026   Code   RO          268    .text.prvGetDisinheritPriorityAfterTimeout  queue.o
    0x000025a2   0x000025a2   0x00000002   PAD
    0x000025a4   0x000025a4   0x0000007c   Code   RO          445    .text.prvGetExpectedIdleTime  tasks.o
    0x00002620   0x00002620   0x000000ae   Code   RO          196    .text.prvHeapInit   heap_4.o
    0x000026ce   0x000026ce   0x00000002   PAD
    0x000026d0   0x000026d0   0x0000009e   Code   RO          353    .text.prvIdleTask   tasks.o
    0x0000276e   0x0000276e   0x00000002   PAD
    0x00002770   0x00002770   0x0000002c   Code   RO          234    .text.prvInitialiseMutex  queue.o
    0x0000279c   0x0000279c   0x0000004e   Code   RO          230    .text.prvInitialiseNewQueue  queue.o
    0x000027ea   0x000027ea   0x00000002   PAD
    0x000027ec   0x000027ec   0x00000124   Code   RO          313    .text.prvInitialiseNewTask  tasks.o
    0x00002910   0x00002910   0x0000008e   Code   RO          441    .text.prvInitialiseTaskLists  tasks.o
    0x0000299e   0x0000299e   0x00000002   PAD
    0x000029a0   0x000029a0   0x000000c6   Code   RO          198    .text.prvInsertBlockIntoFreeList  heap_4.o
    0x00002a66   0x00002a66   0x00000002   PAD
    0x00002a68   0x00002a68   0x00000028   Code   RO          266    .text.prvIsQueueEmpty  queue.o
    0x00002a90   0x00002a90   0x0000002e   Code   RO          254    .text.prvIsQueueFull  queue.o
    0x00002abe   0x00002abe   0x00000002   PAD
    0x00002ac0   0x00002ac0   0x000000ec   Code   RO          252    .text.prvNotifyQueueSetContainer  queue.o
    0x00002bac   0x00002bac   0x00000028   Code   RO          165    .text.prvPortStartFirstTask  port.o
    0x00002bd4   0x00002bd4   0x0000003c   Code   RO          319    .text.prvResetNextTaskUnblockTime  tasks.o
    0x00002c10   0x00002c10   0x0000004c   Code   RO          155    .text.prvTaskExitError  port.o
    0x00002c5c   0x00002c5c   0x000000cc   Code   RO          256    .text.prvUnlockQueue  queue.o
    0x00002d28   0x00002d28   0x000001c8   Code   RO          194    .text.pvPortMalloc  heap_4.o
    0x00002ef0   0x00002ef0   0x0000002c   Code   RO          425    .text.pvTaskIncrementMutexHeldCount  tasks.o
    0x00002f1c   0x00002f1c   0x0000005e   Code   RO          153    .text.pxPortInitialiseStack  port.o
    0x00002f7a   0x00002f7a   0x00000002   PAD
    0x00002f7c   0x00002f7c   0x00000048   Code   RO          144    .text.uxListRemove  list.o
    0x00002fc4   0x00002fc4   0x00000036   Code   RO          276    .text.uxQueueMessagesWaiting  queue.o
    0x00002ffa   0x00002ffa   0x00000002   PAD
    0x00002ffc   0x00002ffc   0x00000030   Code   RO          280    .text.uxQueueMessagesWaitingFromISR  queue.o
    0x0000302c   0x0000302c   0x0000000c   Code   RO          363    .text.uxTaskGetNumberOfTasks  tasks.o
    0x00003038   0x00003038   0x00000008   Code   RO           42    .text.vApplicationIdleHook  main.o
    0x00003040   0x00003040   0x0000002e   Code   RO          136    .text.vListInitialise  list.o
    0x0000306e   0x0000306e   0x00000002   PAD
    0x00003070   0x00003070   0x0000000e   Code   RO          138    .text.vListInitialiseItem  list.o
    0x0000307e   0x0000307e   0x00000002   PAD
    0x00003080   0x00003080   0x0000006a   Code   RO          142    .text.vListInsert   list.o
    0x000030ea   0x000030ea   0x00000002   PAD
    0x000030ec   0x000030ec   0x00000014   Code   RO          163    .text.vPortEnableVFP  port.o
    0x00003100   0x00003100   0x00000056   Code   RO          169    .text.vPortEnterCritical  port.o
    0x00003156   0x00003156   0x00000002   PAD
    0x00003158   0x00003158   0x0000004a   Code   RO          171    .text.vPortExitCritical  port.o
    0x000031a2   0x000031a2   0x00000002   PAD
    0x000031a4   0x000031a4   0x000000ba   Code   RO          200    .text.vPortFree     heap_4.o
    0x0000325e   0x0000325e   0x00000002   PAD
    0x00003260   0x00003260   0x00000078   Code   RO          161    .text.vPortSetupTimerInterrupt  port.o
    0x000032d8   0x000032d8   0x00000220   Code   RO          177    .text.vPortSuppressTicksAndSleep  port.o
    0x000034f8   0x000034f8   0x00000084   Code   RO          179    .text.vPortValidateInterruptPriority  port.o
    0x0000357c   0x0000357c   0x00000024   Code   RO          393    .text.vTaskInternalSetTimeOutState  tasks.o
    0x000035a0   0x000035a0   0x0000000e   Code   RO          397    .text.vTaskMissedYield  tasks.o
    0x000035ae   0x000035ae   0x00000002   PAD
    0x000035b0   0x000035b0   0x00000042   Code   RO          383    .text.vTaskPlaceOnEventList  tasks.o
    0x000035f2   0x000035f2   0x00000002   PAD
    0x000035f4   0x000035f4   0x00000182   Code   RO          421    .text.vTaskPriorityDisinheritAfterTimeout  tasks.o
    0x00003776   0x00003776   0x00000002   PAD
    0x00003778   0x00003778   0x000000a2   Code   RO          351    .text.vTaskStartScheduler  tasks.o
    0x0000381a   0x0000381a   0x00000002   PAD
    0x0000381c   0x0000381c   0x000000cc   Code   RO          377    .text.vTaskStepTick  tasks.o
    0x000038e8   0x000038e8   0x00000010   Code   RO          325    .text.vTaskSuspendAll  tasks.o
    0x000038f8   0x000038f8   0x000000be   Code   RO          343    .text.vTaskSwitchContext  tasks.o
    0x000039b6   0x000039b6   0x00000002   PAD
    0x000039b8   0x000039b8   0x00000156   Code   RO          159    .text.xPortStartScheduler  port.o
    0x00003b0e   0x00003b0e   0x00000002   PAD
    0x00003b10   0x00003b10   0x00000026   Code   RO          232    .text.xQueueCreateMutex  queue.o
    0x00003b36   0x00003b36   0x00000002   PAD
    0x00003b38   0x00003b38   0x0000009a   Code   RO          228    .text.xQueueGenericCreate  queue.o
    0x00003bd2   0x00003bd2   0x00000002   PAD
    0x00003bd4   0x00003bd4   0x00000108   Code   RO          226    .text.xQueueGenericReset  queue.o
    0x00003cdc   0x00003cdc   0x00000274   Code   RO          242    .text.xQueueGenericSend  queue.o
    0x00003f50   0x00003f50   0x000001bc   Code   RO          258    .text.xQueueGenericSendFromISR  queue.o
    0x0000410c   0x0000410c   0x00000182   Code   RO          260    .text.xQueueGiveFromISR  queue.o
    0x0000428e   0x0000428e   0x00000002   PAD
    0x00004290   0x00004290   0x000001e0   Code   RO          270    .text.xQueuePeek    queue.o
    0x00004470   0x00004470   0x000001dc   Code   RO          262    .text.xQueueReceive  queue.o
    0x0000464c   0x0000464c   0x0000013e   Code   RO          272    .text.xQueueReceiveFromISR  queue.o
    0x0000478a   0x0000478a   0x00000002   PAD
    0x0000478c   0x0000478c   0x00000210   Code   RO          246    .text.xQueueSemaphoreTake  queue.o
    0x0000499c   0x0000499c   0x000000fc   Code   RO          395    .text.xTaskCheckForTimeOut  tasks.o
    0x00004a98   0x00004a98   0x000000a0   Code   RO          311    .text.xTaskCreate   tasks.o
    0x00004b38   0x00004b38   0x00000038   Code   RO          415    .text.xTaskGetSchedulerState  tasks.o
    0x00004b70   0x00004b70   0x0000001e   Code   RO          361    .text.xTaskGetTickCountFromISR  tasks.o
    0x00004b8e   0x00004b8e   0x00000002   PAD
    0x00004b90   0x00004b90   0x00000260   Code   RO          357    .text.xTaskIncrementTick  tasks.o
    0x00004df0   0x00004df0   0x00000138   Code   RO          419    .text.xTaskPriorityDisinherit  tasks.o
    0x00004f28   0x00004f28   0x0000015c   Code   RO          417    .text.xTaskPriorityInherit  tasks.o
    0x00005084   0x00005084   0x00000192   Code   RO          387    .text.xTaskRemoveFromEventList  tasks.o
    0x00005216   0x00005216   0x00000002   PAD
    0x00005218   0x00005218   0x00000222   Code   RO          329    .text.xTaskResumeAll  tasks.o
    0x0000543a   0x0000543a   0x00000028   Code   RO          481    i.GPIODirModeSet    driverlib.lib(gpio.o)
    0x00005462   0x00005462   0x00000006   Code   RO          482    i.GPIOIntClear      driverlib.lib(gpio.o)
    0x00005468   0x00005468   0x0000000c   Code   RO          484    i.GPIOIntEnable     driverlib.lib(gpio.o)
    0x00005474   0x00005474   0x0000001a   Code   RO          485    i.GPIOIntRegister   driverlib.lib(gpio.o)
    0x0000548e   0x0000548e   0x0000000e   Code   RO          487    i.GPIOIntStatus     driverlib.lib(gpio.o)
    0x0000549c   0x0000549c   0x00000050   Code   RO          489    i.GPIOIntTypeSet    driverlib.lib(gpio.o)
    0x000054ec   0x000054ec   0x00000170   Code   RO          493    i.GPIOPadConfigSet  driverlib.lib(gpio.o)
    0x0000565c   0x0000565c   0x00000006   Code   RO          495    i.GPIOPinRead       driverlib.lib(gpio.o)
    0x00005662   0x00005662   0x0000001c   Code   RO          504    i.GPIOPinTypeGPIOInput  driverlib.lib(gpio.o)
    0x0000567e   0x0000567e   0x0000001c   Code   RO          505    i.GPIOPinTypeGPIOOutput  driverlib.lib(gpio.o)
    0x0000569a   0x0000569a   0x00000006   Code   RO          523    i.GPIOPinWrite      driverlib.lib(gpio.o)
    0x000056a0   0x000056a0   0x00000018   Code   RO          524    i.GPIOUnlockPin     driverlib.lib(gpio.o)
    0x000056b8   0x000056b8   0x00000064   Code   RO          815    i.IntEnable         driverlib.lib(interrupt.o)
    0x0000571c   0x0000571c   0x0000000e   Code   RO          818    i.IntMasterEnable   driverlib.lib(interrupt.o)
    0x0000572a   0x0000572a   0x00000002   PAD
    0x0000572c   0x0000572c   0x00000028   Code   RO          826    i.IntPrioritySet    driverlib.lib(interrupt.o)
    0x00005754   0x00005754   0x00000034   Code   RO          827    i.IntRegister       driverlib.lib(interrupt.o)
    0x00005788   0x00005788   0x00000028   Code   RO          964    i.SysCtlPeripheralEnable  driverlib.lib(sysctl.o)
    0x000057b0   0x000057b0   0x0000002c   Code   RO          968    i.SysCtlPeripheralReady  driverlib.lib(sysctl.o)
    0x000057dc   0x000057dc   0x00000060   Code   RO         1282    i.TimerConfigure    driverlib.lib(timer.o)
    0x0000583c   0x0000583c   0x00000010   Code   RO         1290    i.TimerDisable      driverlib.lib(timer.o)
    0x0000584c   0x0000584c   0x0000000e   Code   RO         1291    i.TimerEnable       driverlib.lib(timer.o)
    0x0000585a   0x0000585a   0x00000004   Code   RO         1292    i.TimerIntClear     driverlib.lib(timer.o)
    0x0000585e   0x0000585e   0x00000008   Code   RO         1294    i.TimerIntEnable    driverlib.lib(timer.o)
    0x00005866   0x00005866   0x00000002   PAD
    0x00005868   0x00005868   0x00000068   Code   RO         1295    i.TimerIntRegister  driverlib.lib(timer.o)
    0x000058d0   0x000058d0   0x00000012   Code   RO         1300    i.TimerLoadSet      driverlib.lib(timer.o)
    0x000058e2   0x000058e2   0x00000002   PAD
    0x000058e4   0x000058e4   0x00000050   Code   RO          525    i._GPIOIntNumberGet  driverlib.lib(gpio.o)
    0x00005934   0x00005934   0x0000001a   Code   RO         1635    x$fpl$fpinit        fz_wm.l(fpinit.o)
    0x0000594e   0x0000594e   0x00000002   PAD
    0x00005950   0x00005950   0x00000228   Data   RO          526    .constdata          driverlib.lib(gpio.o)
    0x00005b78   0x00005b78   0x0000010c   Data   RO          831    .constdata          driverlib.lib(interrupt.o)
    0x00005c84   0x00005c84   0x000000a0   Data   RO         1316    .constdata          driverlib.lib(timer.o)
    0x00005d24   0x00005d24   0x000000c1   Data   RO           67    .rodata.str1.1      main.o
    0x00005de5   0x00005de5   0x00000005   Data   RO          463    .rodata.str1.1      tasks.o
    0x00005dea   0x00005dea   0x00000002   PAD
    0x00005dec   0x00005dec   0x00000004   Data   RO          448    .rodata.uxTopUsedPriority  tasks.o
    0x00005df0   0x00005df0   0x00000020   Data   RO         1710    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Exec base: 0x20000000, Load base: 0x00006000, Size: 0x00005aa8, Max: 0x00008000, ABSOLUTE, COMPRESSED[0x00000018])

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   COMPRESSED   0x00000004   Data   RW          127    .data.SystemCoreClock  system_tm4c123.o
    0x20000004   COMPRESSED   0x00000004   Data   RW          183    .data.uxCriticalNesting  port.o
    0x20000008   COMPRESSED   0x000003f8   PAD
    0x20000400   COMPRESSED   0x0000026c   Data   RW          832    vtable              driverlib.lib(interrupt.o)
    0x2000066c   COMPRESSED   0x00000004   PAD
    0x20000670        -       0x00000060   Zero   RW         1575    .bss                c_w.l(libspace.o)
    0x200006d0        -       0x00000004   Zero   RW           44    .bss.counter        main.o
    0x200006d4        -       0x00000004   Zero   RW           45    .bss.motorMutex     main.o
    0x200006d8        -       0x00000004   Zero   RW          447    .bss.pxCurrentTCB   tasks.o
    0x200006dc        -       0x00000004   Zero   RW          458    .bss.pxDelayedTaskList  tasks.o
    0x200006e0        -       0x00000004   Zero   RW          212    .bss.pxEnd          heap_4.o
    0x200006e4        -       0x00000004   Zero   RW          459    .bss.pxOverflowDelayedTaskList  tasks.o
    0x200006e8        -       0x000000a0   Zero   RW          449    .bss.pxReadyTasksLists  tasks.o
    0x20000788        -       0x00000004   Zero   RW           68    .bss.startTimeDriver  main.o
    0x2000078c        -       0x00000004   Zero   RW           69    .bss.startTimePassenger  main.o
    0x20000790        -       0x00005000   Zero   RW          218    .bss.ucHeap         heap_4.o
    0x20005790        -       0x00000001   Zero   RW          181    .bss.ucMaxSysCallPriority  port.o
    0x20005791   COMPRESSED   0x00000003   PAD
    0x20005794        -       0x00000004   Zero   RW          182    .bss.ulMaxPRIGROUPValue  port.o
    0x20005798        -       0x00000004   Zero   RW          186    .bss.ulStoppedTimerCompensation  port.o
    0x2000579c        -       0x00000004   Zero   RW          185    .bss.ulTimerCountsForOneTick  port.o
    0x200057a0        -       0x00000004   Zero   RW          454    .bss.uxCurrentNumberOfTasks  tasks.o
    0x200057a4        -       0x00000004   Zero   RW          453    .bss.uxDeletedTasksWaitingCleanUp  tasks.o
    0x200057a8        -       0x00000004   Zero   RW          456    .bss.uxSchedulerSuspended  tasks.o
    0x200057ac        -       0x00000004   Zero   RW          451    .bss.uxTaskNumber   tasks.o
    0x200057b0        -       0x00000004   Zero   RW          450    .bss.uxTopReadyPriority  tasks.o
    0x200057b4        -       0x00000004   Zero   RW           55    .bss.xAutoCloseWindowDriverSemaphore  main.o
    0x200057b8        -       0x00000004   Zero   RW           51    .bss.xAutoCloseWindowSemaphore  main.o
    0x200057bc        -       0x00000004   Zero   RW           54    .bss.xAutoOpenWindowDriverSemaphore  main.o
    0x200057c0        -       0x00000004   Zero   RW           50    .bss.xAutoOpenWindowSemaphore  main.o
    0x200057c4        -       0x00000004   Zero   RW           53    .bss.xCloseWindowDriverSemaphore  main.o
    0x200057c8        -       0x00000004   Zero   RW           49    .bss.xCloseWindowSemaphore  main.o
    0x200057cc        -       0x00000014   Zero   RW          468    .bss.xDelayedTaskList1  tasks.o
    0x200057e0        -       0x00000014   Zero   RW          469    .bss.xDelayedTaskList2  tasks.o
    0x200057f4        -       0x00000004   Zero   RW          213    .bss.xFreeBytesRemaining  heap_4.o
    0x200057f8        -       0x00000004   Zero   RW          464    .bss.xIdleTaskHandle  tasks.o
    0x200057fc        -       0x00000004   Zero   RW           56    .bss.xJamProtectionSemaphore  main.o
    0x20005800        -       0x00000004   Zero   RW           58    .bss.xLimitSwitchDownSemaphore  main.o
    0x20005804        -       0x00000004   Zero   RW           66    .bss.xLimitSwitchQueue  main.o
    0x20005808        -       0x00000004   Zero   RW           57    .bss.xLimitSwitchUpSemaphore  main.o
    0x2000580c        -       0x00000004   Zero   RW           47    .bss.xLockSemaphore  main.o
    0x20005810        -       0x00000004   Zero   RW          184    .bss.xMaximumPossibleSuppressedTicks  port.o
    0x20005814        -       0x00000004   Zero   RW          215    .bss.xMinimumEverFreeBytesRemaining  heap_4.o
    0x20005818        -       0x00000004   Zero   RW          465    .bss.xNextTaskUnblockTime  tasks.o
    0x2000581c        -       0x00000004   Zero   RW          467    .bss.xNumOfOverflows  tasks.o
    0x20005820        -       0x00000004   Zero   RW          216    .bss.xNumberOfSuccessfulAllocations  heap_4.o
    0x20005824        -       0x00000004   Zero   RW          217    .bss.xNumberOfSuccessfulFrees  heap_4.o
    0x20005828        -       0x00000004   Zero   RW           52    .bss.xOpenWindowDriverSemaphore  main.o
    0x2000582c        -       0x00000004   Zero   RW           48    .bss.xOpenWindowSemaphore  main.o
    0x20005830        -       0x00000004   Zero   RW          466    .bss.xPendedTicks   tasks.o
    0x20005834        -       0x00000014   Zero   RW          462    .bss.xPendingReadyList  tasks.o
    0x20005848        -       0x00000004   Zero   RW          455    .bss.xSchedulerRunning  tasks.o
    0x2000584c        -       0x00000008   Zero   RW          214    .bss.xStart         heap_4.o
    0x20005854        -       0x00000004   Zero   RW           64    .bss.xStateQueueAutoCloseDriver  main.o
    0x20005858        -       0x00000004   Zero   RW           62    .bss.xStateQueueAutoClosePassenger  main.o
    0x2000585c        -       0x00000004   Zero   RW           61    .bss.xStateQueueAutoOPenPassenger  main.o
    0x20005860        -       0x00000004   Zero   RW           63    .bss.xStateQueueAutoOpenDriver  main.o
    0x20005864        -       0x00000004   Zero   RW           60    .bss.xStateQueueDriver  main.o
    0x20005868        -       0x00000004   Zero   RW           59    .bss.xStateQueuePassenger  main.o
    0x2000586c        -       0x00000014   Zero   RW          460    .bss.xSuspendedTaskList  tasks.o
    0x20005880        -       0x00000014   Zero   RW          452    .bss.xTasksWaitingTermination  tasks.o
    0x20005894        -       0x00000004   Zero   RW          457    .bss.xTickCount     tasks.o
    0x20005898        -       0x00000004   Zero   RW           46    .bss.xUnlockSemaphore  main.o
    0x2000589c        -       0x00000004   Zero   RW          461    .bss.xYieldPending  tasks.o
    0x200058a0        -       0x00000004   Zero   RW           65    .bss.xlockingQueue  main.o
    0x200058a4   COMPRESSED   0x00000004   PAD
    0x200058a8        -       0x00000000   Zero   RW          112    HEAP                startup_tm4c123.o
    0x200058a8        -       0x00000200   Zero   RW          111    STACK               startup_tm4c123.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

        40          0          0          0          0       2046   dio.o
      1014          0          0          0      20508       4683   heap_4.o
       238          0          0          0          0       2314   list.o
      6102         16        193          0        100       7900   main.o
       158          0          0          0          0        645   motordriver.o
      1724         16          0          4         17       4932   port.o
      4774          0          0          0          0      16681   queue.o
       276         24        620          0        512       5480   startup_tm4c123.o
       268          0          0          4          0       6730   system_tm4c123.o
      5492          0          9          0        320      26962   tasks.o

    ----------------------------------------------------------------------
     20186         68        856       1024      21464      78373   Object Totals
         0          0         32          0          0          0   (incl. Generated)
       100         12          2       1016          7          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

        58          0          0          0          0          0   __dczerorl.o
         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        12          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        52          8          0          0          0          0   __scatter.o
        28          0          0          0          0          0   __scatter_zi.o
        16          0          0          0          0         68   aeabi_memset4.o
        18          0          0          0          0         80   exit.o
         6          0          0          0          0        152   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
         2          0          0          0          0          0   libinit.o
         6          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
        68          0          0          0          0         68   rt_memclr.o
        78          0          0          0          0         80   rt_memclr_w.o
       138          0          0          0          0         68   rt_memcpy_v6.o
       100          0          0          0          0         80   rt_memcpy_w.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        12          4          0          0          0         68   sys_exit.o
        74          0          0          0          0         80   sys_stackheap_outer.o
         2          0          0          0          0         68   use_no_semi.o
        38          0          0          0          0        572   cpu.o
       718         38        552          0          0      12762   gpio.o
       206         20        268        620          0       3197   interrupt.o
        84          8          0          0          0       1021   sysctl.o
       260         24        160          0          0       4845   timer.o
        26          0          0          0          0        116   fpinit.o

    ----------------------------------------------------------------------
      2058        106        980        620        100      23461   Library Totals
        18          0          0          0          4          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       708         16          0          0         96        948   c_w.l
      1306         90        980        620          0      22397   driverlib.lib
        26          0          0          0          0        116   fz_wm.l

    ----------------------------------------------------------------------
      2058        106        980        620        100      23461   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     22244        174       1836       1644      21564      99058   Grand Totals
     22244        174       1836         24      21564      99058   ELF Image Totals (compressed)
     22244        174       1836         24          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                24080 (  23.52kB)
    Total RW  Size (RW Data + ZI Data)             23208 (  22.66kB)
    Total ROM Size (Code + RO Data + RW Data)      24104 (  23.54kB)

==============================================================================

